const t=t=>!Number.isFinite(t)||t<=0?0:t>10?t:1e3*t;class s{constructor(t,s,i,h,e=100){this.x=t,this.y=s,this.width=i,this.height=h,this.duration=e}}class i{constructor(t,s,i={}){this.name=t,this.frames=s,this.loop=null===i.loop||void 0===i.loop||i.loop,this.pingPong=i.pingPong||!1,this.speed=i.speed||1,this.onComplete=i.onComplete||null,this.onFrame=i.onFrame||null,this.currentFrame=0,this.elapsedTime=0,this.direction=1,this.isPlaying=!1,this.hasCompleted=!1}play(){this.isPlaying=!0,this.hasCompleted=!1,this.currentFrame=0,this.elapsedTime=0,this.direction=1}stop(){this.isPlaying=!1,this.reset()}pause(){this.isPlaying=!1}resume(){this.isPlaying=!0}reset(){this.currentFrame=0,this.elapsedTime=0,this.direction=1,this.hasCompleted=!1}update(s){if(!this.isPlaying||0===this.frames.length)return;const i=t(s)*this.speed;if(i<=0)return;if(this.elapsedTime+=i,this.frames.length<=1){const t=this.frames[0];return t?t.duration<=0?(this.loop||(this.isPlaying=!1,this.hasCompleted=!0,this.onComplete&&this.onComplete()),void(this.elapsedTime=0)):void(this.elapsedTime>=t.duration&&(this.loop?this.elapsedTime=this.elapsedTime%t.duration:(this.currentFrame=0,this.isPlaying=!1,this.hasCompleted=!0,this.elapsedTime=0,this.onComplete&&this.onComplete()))):void(this.elapsedTime=0)}const h=3*this.frames.length;let e=0;for(;e<h;){const t=this.frames[this.currentFrame];if(!t){this.currentFrame=Math.min(Math.max(this.currentFrame,0),this.frames.length-1),this.elapsedTime=0;break}if(t.duration<=0){this.loop||this.currentFrame!==this.frames.length-1||(this.isPlaying=!1,this.hasCompleted=!0,this.onComplete&&this.onComplete()),this.elapsedTime=0;break}if(this.elapsedTime<t.duration)break;this.elapsedTime-=t.duration;const s=this.currentFrame;if(this.currentFrame+=this.direction,this.pingPong)(this.currentFrame>=this.frames.length||this.currentFrame<0)&&(this.direction*=-1,this.currentFrame=s+this.direction);else if(this.currentFrame>=this.frames.length){if(!this.loop){if(this.currentFrame=this.frames.length-1,this.isPlaying=!1,this.hasCompleted=!0,this.elapsedTime=0,this.onComplete&&this.onComplete(),this.onFrame&&this.currentFrame!==s){const t=this.frames[this.currentFrame];t&&this.onFrame(this.currentFrame,t)}break}this.currentFrame=0}else this.currentFrame<0&&(this.currentFrame=this.loop?this.frames.length-1:0);if(this.onFrame&&this.currentFrame!==s){const t=this.frames[this.currentFrame];t&&this.onFrame(this.currentFrame,t)}e+=1}}getCurrentFrame(){return 0===this.frames.length||this.currentFrame<0||this.currentFrame>=this.frames.length?null:this.frames[this.currentFrame]}getProgress(){return this.frames.length<=1?0:this.currentFrame/(this.frames.length-1)}getFrameAt(t){return t<0||t>=this.frames.length?null:this.frames[t]}}class h{constructor(){this.animations=Object.create(null),this.t=new Map,this.currentAnimation=null,this.blendTime=0,this.blendFrom=null,this.blendProgress=0,this.isTransitioning=!1,this.transitionDuration=0}addAnimation(t,s){let i=null,h=null;"string"==typeof t&&s?(i=t,h=s):(h=t,h&&"string"==typeof h.name&&(i=h.name)),i&&h&&(this.animations[i]=h,this.t.set(i,h))}getAnimation(t){return t&&(this.t.get(t)||this.animations[t])||null}play(s,i={}){const h=this.getAnimation(s);if(!h)return;const e=!!this.currentAnimation,n=i.transition,a="number"==typeof i.transitionDuration?i.transitionDuration:0;let o=0;"number"==typeof n&&n>0?o=n:(!0===n||a>0)&&a>0?o=a:!0===n&&0===a?o=150:a>0&&(o=a);const r=t(o);e&&r>0?(this.blendFrom=this.currentAnimation,this.blendTime=r,this.blendProgress=0,this.isTransitioning=!0,this.transitionDuration=r):(this.blendFrom=null,this.blendTime=0,this.blendProgress=0,this.isTransitioning=!1,this.transitionDuration=0),this.currentAnimation=h,h.play()}stop(){this.currentAnimation&&this.currentAnimation.stop(),this.isTransitioning=!1,this.blendTime=0,this.blendFrom=null,this.blendProgress=0,this.transitionDuration=0}update(s){const i=t(s);this.blendTime>0&&i>0&&(this.blendProgress+=i,this.blendProgress>=this.blendTime&&(this.blendTime=0,this.blendFrom=null,this.blendProgress=0,this.isTransitioning=!1,this.transitionDuration=0)),this.currentAnimation&&this.currentAnimation.update(s)}getCurrentFrame(){return this.currentAnimation?this.currentAnimation.getCurrentFrame():null}getBlendFrames(){if(0===this.blendTime||!this.blendFrom)return{current:this.getCurrentFrame(),blend:null,blendFactor:0};const t=this.blendTime>0?Math.min(1,this.blendProgress/this.blendTime):0;return{current:this.currentAnimation?this.currentAnimation.getCurrentFrame():null,blend:this.blendFrom?this.blendFrom.getCurrentFrame():null,blendFactor:t}}isPlaying(t){return this.currentAnimation&&this.currentAnimation.name===t&&this.currentAnimation.isPlaying}setSpeed(t){this.currentAnimation&&(this.currentAnimation.speed=t)}}class e{constructor(){this.animations=Object.create(null)}addAnimation(t,s,i={}){if(!t||"function"!=typeof s)return null;const h={name:t,update:s,duration:"number"==typeof i.duration?i.duration:null,loop:void 0===i.loop||i.loop,isPlaying:void 0===i.autoStart||!1!==i.autoStart,elapsed:0,meta:i.meta??null};return this.animations[t]=h,h}play(t){const s=this.animations[t];s&&(s.isPlaying=!0,s.elapsed=0)}stop(t){const s=this.animations[t];s&&(s.isPlaying=!1,s.elapsed=0)}update(t){const s=Number.isFinite(t)?t:0;for(const t of Object.values(this.animations))t&&!1!==t.isPlaying&&"function"==typeof t.update&&(t.elapsed+=s,t.update(s,t),t.duration&&t.duration>0&&t.elapsed>=t.duration&&(t.loop?t.elapsed=t.elapsed%t.duration:t.isPlaying=!1))}createBreathingAnimation(t={}){const{baseScale:s=1,intensity:i=.015,speed:h=2,asymmetry:e=.2}=t;return{time:0,phase:0,breathRate:h,currentIntensity:i,depthMod:1,asymmetryOffset:0,i:{scaleX:s,scaleY:s,offsetY:0,chestExpansion:0,phase:0,intensity:0},modulateForState(t){switch(t){case"running":this.depthMod=.3,this.breathRate=3*h;break;case"attacking":this.depthMod=.5,this.breathRate=1.8*h;break;case"blocking":this.depthMod=.2,this.breathRate=1.3*h;break;case"hurt":this.depthMod=.1,this.breathRate=.5*h;break;case"dead":this.depthMod=0,this.breathRate=0;break;default:this.depthMod=1,this.breathRate=h}},update(t){const i=this.i;if(this.breathRate<=0)return i.scaleX=s,i.scaleY=s,i.offsetY=0,i.chestExpansion=0,i.phase=0,i.intensity=0,i;this.time+=t*this.breathRate,this.phase=Math.sin(this.time);const h=this.currentIntensity*this.depthMod,n=s+this.phase*h,a=s+this.phase*h*.7,o=n+Math.sin(.7*this.time)*e*h*.3,r=this.phase*h*2,l=1-Math.exp(5*-t);return this.currentIntensity=this.currentIntensity+(h-this.currentIntensity)*l,i.scaleX=o,i.scaleY=a,i.offsetY=.5*-r,i.chestExpansion=r,i.phase=this.phase,i.intensity=h,i}}}createBobbingAnimation(t=5,s=2){return{time:0,i:{offsetY:0,rotation:0},update(i){this.time+=i*s;const h=this.i;return h.offsetY=Math.sin(this.time)*t,h.rotation=.05*Math.sin(.5*this.time),h}}}createSquashStretch(t=.3,s=.2){return{time:0,active:!1,i:{scaleX:1,scaleY:1},trigger(){this.time=0,this.active=!0},update(i){const h=this.i;if(!this.active)return h.scaleX=1,h.scaleY=1,h;this.time+=i;const e=Math.min(this.time/s,1);if(e>=1)return this.active=!1,h.scaleX=1,h.scaleY=1,h;const n=2**(-10*e)*Math.sin(2*Math.PI*(e-.075)/.3)+1,a=1-n*t,o=1+n*t*.5;return h.scaleX=e<.5?o:a,h.scaleY=e<.5?a:o,h}}}createWobble(t=10,s=.8,i=.1){return{velocity:0,displacement:0,i:{scaleX:1,scaleY:1,rotation:0},update(h,e=0){const n=-t*this.displacement,a=-s*this.velocity;this.velocity+=(n+a+e)*h,this.displacement+=this.velocity*h;const o=this.i;return o.scaleX=1+this.displacement*i,o.scaleY=1-this.displacement*i*.5,o.rotation=.1*this.displacement,o},impulse(t){this.velocity+=t}}}createAnticipation(t=.3,s=.15){return{time:0,active:!1,phase:"idle",i:{scaleX:1,scaleY:1,offsetX:0},trigger(){this.time=0,this.active=!0,this.phase="anticipation"},update(i){const h=this.i;if(!this.active)return h.scaleX=1,h.scaleY=1,h.offsetX=0,h;if(this.time+=i,"anticipation"===this.phase){const i=Math.min(this.time/(.4*t),1),e=1-Math.cos(i*Math.PI*.5);return i>=1&&(this.phase="action",this.time=0),h.scaleX=1-e*s,h.scaleY=1+e*s*.5,h.offsetX=10*-e,h}if("action"===this.phase){const i=Math.min(this.time/(.2*t),1),e=Math.sin(i*Math.PI*.5);return i>=1&&(this.phase="recovery",this.time=0),h.scaleX=1+e*s*2,h.scaleY=1-e*s,h.offsetX=20*e,h}if("recovery"===this.phase){const i=Math.min(this.time/(.4*t),1),e=1-(1-i)**3;return i>=1&&(this.active=!1,this.phase="idle"),h.scaleX=1+(1-e)*s*.5,h.scaleY=1-(1-e)*s*.25,h.offsetX=10*(1-e),h}return h.scaleX=1,h.scaleY=1,h.offsetX=0,h}}}createAdvancedIK(t={}){const{armLength:s=25,forearmLength:i=20,damping:h=.8,stiffness:e=.5,maxReach:n=40}=t;return{shoulder:{x:0,y:0},elbow:{x:0,y:0},hand:{x:0,y:0},target:{x:0,y:0},targetVelocity:{x:0,y:0},i:{shoulder:{x:0,y:0},elbow:{x:0,y:0},hand:{x:0,y:0},target:{x:0,y:0},reach:0,stiffness:0},solveIK(t,h,e,a){this.target.x=t,this.target.y=h,this.shoulder.x=e,this.shoulder.y=a;const o=t-e,r=h-a,l=Math.sqrt(o*o+r*r),c=Math.min(l,n),u=c/l,g=e+o*u,f=a+r*u,d=s+i,m=Math.acos(Math.max(-1,Math.min(1,c/d))),p=Math.atan2(f-a,g-e);this.elbow.x=e+Math.cos(p-.5*m)*s,this.elbow.y=a+Math.sin(p-.5*m)*s,this.hand.x=this.elbow.x+Math.cos(p+.5*m)*i,this.hand.y=this.elbow.y+Math.sin(p+.5*m)*i;const b=this.i;return b.shoulder.x=this.shoulder.x,b.shoulder.y=this.shoulder.y,b.elbow.x=this.elbow.x,b.elbow.y=this.elbow.y,b.hand.x=this.hand.x,b.hand.y=this.hand.y,b.target.x=g,b.target.y=f,b.reach=c/d,b},update(t,s,i,n,a){const o=s+this.targetVelocity.x*t*.1,r=i+this.targetVelocity.y*t*.1;this.targetVelocity.x=(o-this.target.x)/t*h,this.targetVelocity.y=(r-this.target.y)/t*h;const l=this.solveIK(o,r,n,a),c=1-Math.exp(-e*t),u=this.i;return u.shoulder.x=l.shoulder.x,u.shoulder.y=l.shoulder.y,u.elbow.x=l.elbow.x,u.elbow.y=l.elbow.y,u.hand.x=l.hand.x,u.hand.y=l.hand.y,u.target.x=l.target.x,u.target.y=l.target.y,u.reach=l.reach,u.stiffness=c,u}}}createSecondaryMotion(t={}){const{segments:s=5,length:i=15,damping:h=.85,gravity:e=.5,windStrength:n=.1}=t;return{segments:[],anchorPoint:{x:0,y:0},windTime:0,h:[],initialize(t,h){this.anchorPoint={x:t,y:h},this.segments=[];for(let e=0;e<s;e++)this.segments.push({x:t,y:h+e*(i/s),vx:0,vy:0,prevX:t,prevY:h+e*(i/s)})},update(t,a,o,r=0){this.anchorPoint.x=a,this.anchorPoint.y=o,this.windTime+=t,this.segments[0].x=a,this.segments[0].y=o;for(let a=1;a<this.segments.length;a++){const o=this.segments[a],l=this.segments[a-1],c=o.x-l.x,u=o.y-l.y,g=Math.sqrt(c*c+u*u);if(g>0){const t=i/s/g;o.x=l.x+c*t,o.y=l.y+u*t}o.vy+=e*t;const f=Math.sin(2*this.windTime+r)*n,d=Math.cos(1.5*this.windTime+r)*n*.5;o.vx+=f*t,o.vy+=d*t;const m=o.x,p=o.y;o.x+=(o.x-o.prevX)*h+o.vx*t,o.y+=(o.y-o.prevY)*h+o.vy*t,o.prevX=m,o.prevY=p,o.vx*=h,o.vy*=h}this.h&&this.h.length===this.segments.length||(this.h=Array(this.segments.length));for(let t=0;t<this.segments.length;t++)this.h[t]=this.segments[t];return this.h},applyForce(t,s,i=-1){-1===i?this.segments.forEach(i=>{i.vx+=t,i.vy+=s}):i<this.segments.length&&(this.segments[i].vx+=t,this.segments[i].vy+=s)}}}createMomentumSystem(t={}){const{maxMomentum:s=10,momentumDecay:i=.9,momentumInfluence:h=.3,directionSmoothing:e=.8}=t;return{momentum:{x:0,y:0},smoothedDirection:{x:0,y:0},lastVelocity:{x:0,y:0},i:{momentum:{x:0,y:0},smoothedDirection:{x:0,y:0},leanAngle:0,bounceFactor:0,stretchFactor:0},update(t,n,a,o=!0){const r=n-this.lastVelocity.x,l=a-this.lastVelocity.y;this.lastVelocity={x:n,y:a};const c=Math.sqrt(r*r+l*l);if(c>.1){const t=Math.min(c*h,s),i=r/c,e=l/c;this.momentum.x+=i*t,this.momentum.y+=e*t}this.momentum.x*=i,this.momentum.y*=i;const u=Math.sqrt(this.momentum.x*this.momentum.x+this.momentum.y*this.momentum.y);u>s&&(this.momentum.x=this.momentum.x/u*s,this.momentum.y=this.momentum.y/u*s);const g=n,f=a,d=Math.sqrt(g*g+f*f);if(d>.1){const t={x:g/d,y:f/d};this.smoothedDirection.x=this.smoothedDirection.x*(1-e)+t.x*e,this.smoothedDirection.y=this.smoothedDirection.y*(1-e)+t.y*e}const m=this.i;return m.momentum.x=this.momentum.x,m.momentum.y=this.momentum.y,m.smoothedDirection.x=this.smoothedDirection.x,m.smoothedDirection.y=this.smoothedDirection.y,m.leanAngle=o?.3*Math.atan2(this.momentum.x,Math.abs(this.momentum.y)+1):0,m.bounceFactor=.1*u,m.stretchFactor=Math.max(0,.05*u),m},addImpulse(t,s){this.momentum.x+=t,this.momentum.y+=s}}}createTrailEffect(t=5,s=.3){return{trails:[],lastPosition:null,update(i,h){if(this.trails=this.trails.filter(t=>(t.alpha-=s*i,t.alpha>0)),this.lastPosition){const s=h.x-this.lastPosition.x,i=h.y-this.lastPosition.y;Math.sqrt(s*s+i*i)>10&&(this.trails.push({x:this.lastPosition.x,y:this.lastPosition.y,alpha:.5,scale:.8}),this.trails.length>t&&this.trails.shift(),this.lastPosition={...h})}else this.lastPosition={...h};return this.trails},clear(){this.trails=[]}}}}class n{constructor(){this.controller=new h,this.procedural=new e,this.animations=Object.create(null),this.currentAnimation=null,this.eventSystem=null,this.eventListeners=new Map,this.breathing=this.procedural.createBreathingAnimation({intensity:.012,speed:1.8,asymmetry:.15}),this.squashStretch=this.procedural.createSquashStretch(),this.wobble=this.procedural.createWobble(),this.anticipation=this.procedural.createAnticipation(),this.trail=this.procedural.createTrailEffect(),this.advancedIK=this.procedural.createAdvancedIK({armLength:22,forearmLength:18,damping:.75,stiffness:.4}),this.secondaryMotion=this.procedural.createSecondaryMotion({segments:4,length:12,damping:.82,stiffness:.25,gravity:.3,windStrength:.08}),this.momentumSystem=this.procedural.createMomentumSystem({maxMomentum:8,momentumDecay:.88,momentumInfluence:.25,directionSmoothing:.75}),this.state=0,this.stateName="idle",this.facing="right",this.moving=!1,this.attacking=!1,this.blocking=!1,this.rolling=!1,this.hurt=!1,this.jumping=!1,this.doubleJumping=!1,this.wallSliding=!1,this.dashing=!1,this.charging=!1,this.dead=!1,this.landing=!1,this.blendFactors={idle:1,running:0,attacking:0,blocking:0,rolling:0,hurt:0,jumping:0,doubleJumping:0,landing:0,wallSliding:0,dashing:0,chargingAttack:0,dead:0},this.targetBlendFactors={...this.blendFactors},this.blendSpeed=.2,this.hurtTimer=0,this.attackTimer=0,this.rollTimer=0}resetActionTimers(){this.hurtTimer=0,this.attackTimer=0,this.rollTimer=0}addAnimation(t,s){if(!s)return;const i=t||s&&s.name;i&&(this.animations[i]=s,this.controller.addAnimation(i,s))}play(t,s={}){t&&this.animations[t]&&(this.controller.play(t,s),this.currentAnimation=this.controller.currentAnimation,"string"==typeof t&&(this.stateName=t))}getAnimStateName(t){switch(t){case 0:default:return"idle";case 1:return"running";case 2:return"attacking";case 3:return"blocking";case 4:return"rolling";case 5:return"hurt";case 6:return"dead";case 7:return"jumping";case 8:return"doubleJumping";case 9:return"landing";case 10:return"wallSliding";case 11:return"dashing";case 12:return"chargingAttack"}}setAnimState(t){if(this.state===t)return;this.resetActionTimers();const s=this.state,i=this.stateName;switch(this.state=t,this.stateName=this.getAnimStateName(t),this.emit("stateChange",{fromState:s,toState:t,fromStateName:i,toStateName:this.stateName}),Object.keys(this.targetBlendFactors).forEach(t=>{this.targetBlendFactors[t]=0}),this.targetBlendFactors[this.stateName]=1,this.play(this.stateName,{transition:.1}),t){case 2:this.anticipation.trigger();break;case 5:this.squashStretch.trigger(),this.wobble.impulse(10);break;case 4:case 11:this.trail.clear();break;case 7:this.squashStretch.trigger();break;case 8:this.wobble.impulse(5),this.trail.clear();break;case 9:this.squashStretch.trigger(),this.wobble.impulse(15);break;case 12:this.anticipation.trigger(),this.wobble.impulse(3);break;case 6:this.squashStretch.trigger(),this.wobble.impulse(20)}}update(t,s,i={x:0,y:0},h=!0){this.hurtTimer>0&&(this.hurtTimer-=t,this.hurtTimer<=0&&5===this.state&&this.setAnimState(0)),this.attackTimer>0&&(this.attackTimer-=t,this.attackTimer<=0&&2===this.state&&this.setAnimState(0)),this.rollTimer>0&&(this.rollTimer-=t,this.rollTimer<=0&&4===this.state&&this.setAnimState(0)),this.controller.update(t),Object.keys(this.blendFactors).forEach(t=>{const s=this.targetBlendFactors[t]-this.blendFactors[t];this.blendFactors[t]+=s*this.blendSpeed}),this.breathing.modulateForState(this.stateName);const e=this.breathing.update(t),n=this.momentumSystem.update(t,i.x,i.y,h);0===this.secondaryMotion.segments.length&&this.secondaryMotion.initialize(s.x,s.y-8);const a=this.secondaryMotion.update(t,s.x,s.y-8),o=this.squashStretch.update(t),r=this.wobble.update(t),l=this.anticipation.update(t),c={scaleX:1,scaleY:1,rotation:0,offsetX:0,offsetY:0,trails:this.trail.update(t,s),secondaryMotion:a,momentum:n,ik:null};return(this.blendFactors.idle>0||this.blendFactors.running>0)&&(c.scaleX*=e.scaleX,c.scaleY*=e.scaleY,c.offsetY+=e.offsetY),c.rotation+=n.leanAngle,c.scaleY*=1+n.stretchFactor,c.offsetY+=n.bounceFactor*Math.sin(.01*Date.now()),c.scaleX*=o.scaleX,c.scaleY*=o.scaleY,c.scaleX*=r.scaleX,c.scaleY*=r.scaleY,c.rotation+=r.rotation,"attacking"!==this.stateName&&"chargingAttack"!==this.stateName||(c.scaleX*=l.scaleX,c.scaleY*=l.scaleY,c.offsetX+=l.offsetX),"left"===this.facing&&(c.scaleX*=-1),c}setFacing(t){this.facing=t}setEventSystem(t){this.eventSystem=t}on(t,s,i=null){this.eventListeners.has(t)||this.eventListeners.set(t,new Set);const h={callback:s,context:i,once:!1};return this.eventListeners.get(t).add(h),this.eventSystem?this.eventSystem.on(t,s,i):()=>this.off(t,s)}once(t,s,i=null){this.eventListeners.has(t)||this.eventListeners.set(t,new Set);const h={callback:s,context:i,once:!0};return this.eventListeners.get(t).add(h),this.eventSystem?this.eventSystem.once(t,s,i):()=>this.off(t,s)}off(t,s){if(!this.eventListeners.has(t))return!1;const i=this.eventListeners.get(t);for(const t of i)if(t.callback===s){i.delete(t);break}return 0===i.size&&this.eventListeners.delete(t),this.eventSystem&&this.eventSystem.off(t,s),!0}emit(t,s={}){if(this.eventListeners.has(t)){const i=Array.from(this.eventListeners.get(t));for(const h of i)try{h.context?h.callback.call(h.context,s):h.callback(s),h.once&&this.eventListeners.get(t).delete(h)}catch(s){console.error(`Error in animation event listener for ${t}:`,s)}}this.eventSystem&&this.eventSystem.emit(t,s)}triggerHurt(){this.setAnimState(5),this.hurtTimer=300,this.emit("hurt",{timer:this.hurtTimer})}triggerAttack(){this.setAnimState(2),this.attackTimer=400,this.emit("attack",{timer:this.attackTimer})}triggerRoll(){this.setAnimState(4),this.rollTimer=400,this.emit("roll",{timer:this.rollTimer})}triggerBlock(){this.setAnimState(3),this.emit("block")}releaseBlock(){3===this.state&&(this.setAnimState(0),this.emit("blockRelease"))}setMoving(t){this.moving=t,t&&0===this.state?this.setAnimState(1):t||1!==this.state||this.setAnimState(0)}}const a=()=>({idle:new i("idle",[new s(0,0,32,32,200),new s(32,0,32,32,200),new s(64,0,32,32,200),new s(96,0,32,32,200)]),running:new i("running",[new s(0,32,32,32,100),new s(32,32,32,32,100),new s(64,32,32,32,100),new s(96,32,32,32,100),new s(128,32,32,32,100),new s(160,32,32,32,100)]),attacking:new i("attacking",[new s(0,64,32,32,50),new s(32,64,32,32,50),new s(64,64,32,32,100),new s(96,64,32,32,50)],{loop:!1}),blocking:new i("blocking",[new s(0,96,32,32,100)],{loop:!1}),rolling:new i("rolling",[new s(0,128,32,32,50),new s(32,128,32,32,50),new s(64,128,32,32,50),new s(96,128,32,32,50)],{loop:!1}),hurt:new i("hurt",[new s(0,160,32,32,100),new s(32,160,32,32,100)],{loop:!1}),dead:new i("dead",[new s(0,192,32,32,100),new s(32,192,32,32,100),new s(64,192,32,32,100),new s(96,192,32,32,200),new s(128,192,32,32,-1)],{loop:!1}),jumping:new i("jumping",[new s(0,224,32,32,100),new s(32,224,32,32,100),new s(64,224,32,32,-1)],{loop:!1}),doubleJumping:new i("doubleJumping",[new s(0,256,32,32,50),new s(32,256,32,32,50),new s(64,256,32,32,50),new s(96,256,32,32,50),new s(128,256,32,32,50),new s(160,256,32,32,50),new s(192,256,32,32,50),new s(224,256,32,32,-1)],{loop:!1}),landing:new i("landing",[new s(0,288,32,32,50),new s(32,288,32,32,50),new s(64,288,32,32,100)],{loop:!1}),wallSliding:new i("wallSliding",[new s(0,320,32,32,100),new s(32,320,32,32,100)],{loop:!0}),dashing:new i("dashing",[new s(0,352,32,32,50),new s(32,352,32,32,50),new s(64,352,32,32,100),new s(96,352,32,32,50)],{loop:!1}),chargingAttack:new i("chargingAttack",[new s(0,384,32,32,100),new s(32,384,32,32,100),new s(64,384,32,32,100),new s(96,384,32,32,50),new s(128,384,32,32,50),new s(160,384,32,32,100)],{loop:!1})});class o{constructor(t=o.createDefaultPose()){this.pose=o.clonePose(t)}static createDefaultPose(){return{root:{x:0,y:0},pelvis:{x:0,y:0},torso:{x:0,y:-14},head:{x:0,y:-26},leftArm:{shoulder:{x:-7,y:-17},elbow:{x:-11,y:-9},hand:{x:-14,y:0}},rightArm:{shoulder:{x:7,y:-17},elbow:{x:11,y:-9},hand:{x:14,y:0}},leftLeg:{hip:{x:-4,y:0},knee:{x:-5,y:10},foot:{x:-6,y:21}},rightLeg:{hip:{x:4,y:0},knee:{x:5,y:10},foot:{x:6,y:21}}}}static clonePose(t){const s=t=>{const i={};return Object.entries(t).forEach(([t,h])=>{i[t]=h&&"object"==typeof h&&"x"in h?{x:h.x,y:h.y}:h&&"object"==typeof h?s(h):h}),i};return s(t)}createWorkingPose(){return o.clonePose(this.pose)}commitPose(t){this.pose=o.clonePose(t)}toSkeleton(){return this.createWorkingPose()}}const r=(t,s,i)=>Math.min(i,Math.max(s,t)),l=(t,s,i,h)=>{const e=Math.exp(-h*i);return t*e+s*(1-e)};class c{constructor(t={}){this.config={maxLean:t.maxLean??.35,pelvisBobAmplitude:t.pelvisBobAmplitude??3,headStabilization:t.headStabilization??.55,leanResponsiveness:t.leanResponsiveness??10,bobResponsiveness:t.bobResponsiveness??14},this.lean=0,this.pelvisOffset=0,this.breathTimer=0}apply(t,s,i){const h=i.velocity||{x:0},e=i.facing??1,n=i.maxSpeed??240,a=i.normalizedTime??0,o=i.isGrounded??!0,c=i.pelvisOffset??0,u=i.breathing??1,g=r(i.fatigue??0,0,1),f=r(h.x/n,-1,1)*this.config.maxLean;this.lean=l(this.lean,f,t,this.config.leanResponsiveness);const d=i.stridePhase??a,m=o?this.config.pelvisBobAmplitude:.3*this.config.pelvisBobAmplitude,p=g*m*.5,b=Math.sin(d*Math.PI*2)*m-p+c;this.pelvisOffset=l(this.pelvisOffset,b,t,this.config.bobResponsiveness),this.breathTimer+=t*r(u,.25,2);const y=.6*Math.sin(this.breathTimer*Math.PI*2)*u;return s.pelvis.x=4*this.lean*e,s.pelvis.y=this.pelvisOffset,s.torso.x=12*this.lean*e,s.torso.y=.35*this.pelvisOffset-14,s.torso.rotation=.25*this.lean,s.head.x=6*this.lean*e,s.head.y=this.pelvisOffset*(1-this.config.headStabilization)-26+y,s.head.rotation=.2*-this.lean,{offsetX:3*this.lean*e,offsetY:.2*this.pelvisOffset,rotation:.12*this.lean,pelvis:this.pelvisOffset,lean:this.lean,breathOffset:y}}}const u=(t,s,i,h)=>{const e=Math.exp(-h*i);return t*e+s*(1-e)};class g{constructor(t={}){this.config={strideLength:t.strideLength??12,stepHeight:t.stepHeight??5,stanceWidth:t.stanceWidth??8,maxStrideSpeed:t.maxStrideSpeed??220,phaseSpeed:t.phaseSpeed??2.2},this.phase=0,this.lastStepPower=0}apply(t,s,i){const h=i.velocity||{x:0,y:0},e=i.speed??Math.hypot(h.x,h.y),n=i.facing??1,a=i.isGrounded??!0,o=i.legLiftLeft??0,r=i.legLiftRight??0,l=i.groundOffset??0,c=(g=e/this.config.maxStrideSpeed,Math.min(1,Math.max(0,g)));var g;const f=c>.05&&a;if(f){const s=this.config.phaseSpeed+c*this.config.phaseSpeed;this.phase=(this.phase+t*s)%1}else this.phase=u(this.phase,0,t,6);const d=this.config.strideLength*c,m=.5*-this.config.stanceWidth,p=.5*this.config.stanceWidth,b=21+l,y=this.phase,w=(this.phase+.5)%1,M=Math.max(0,Math.sin(y*Math.PI))*this.config.stepHeight+o*this.config.stepHeight,k=Math.max(0,Math.sin(w*Math.PI))*this.config.stepHeight+r*this.config.stepHeight,T=Math.sin(y*Math.PI*2)*d,v=Math.sin(w*Math.PI*2)*d;return s.leftLeg.foot.x=m+n*T,s.leftLeg.foot.y=b-M,s.rightLeg.foot.x=p+n*v,s.rightLeg.foot.y=b-k,s.leftLeg.knee.x=.5*(s.leftLeg.hip.x+s.leftLeg.foot.x),s.leftLeg.knee.y=.5*(s.leftLeg.hip.y+s.leftLeg.foot.y)-(f?.5*this.config.stepHeight:2),s.rightLeg.knee.x=.5*(s.rightLeg.hip.x+s.rightLeg.foot.x),s.rightLeg.knee.y=.5*(s.rightLeg.hip.y+s.rightLeg.foot.y)-(f?.5*this.config.stepHeight:2),this.lastStepPower=u(this.lastStepPower,f?c:0,t,8),{stridePhase:this.phase,moving:f,stepPower:this.lastStepPower,footContacts:{left:M<.2,right:k<.2}}}}const f=(t,s,i,h)=>{const e=Math.exp(-h*i);return t*e+s*(1-e)};class d{constructor(t={}){this.config={attackReach:t.attackReach??18,blockGuardHeight:t.blockGuardHeight??-10,blendSpeed:t.blendSpeed??14,swingAmplitude:t.swingAmplitude??7},this.currentTargets={leftHand:{x:-12,y:-2},rightHand:{x:12,y:-2}}}apply(t,s,i){const h=i.playerState||"idle",e=i.facing??1,n=(a=i.normalizedTime??0,Math.min(1,Math.max(0,a)));var a;const o=i.locomotion||{stridePhase:0,moving:!1},r=i.speed??0;let l={x:-12,y:-2},c={x:12,y:-2};if("attacking"===h){const t=Math.sin(n*Math.PI),s=this.config.attackReach*(i.attackStrength??1);c.x=e*(s*t),c.y=-6-6*t,l.x=e*(.35*s),l.y=-8-2*t}else if("blocking"===h)c.x=10*e,c.y=this.config.blockGuardHeight,l.x=6*e,l.y=this.config.blockGuardHeight-1;else if("rolling"===h)c.x=6*e,c.y=-4,l.x=6*-e,l.y=-4;else{const t=Math.sin(o.stridePhase*Math.PI*2)*(o.moving?1:0);c.x=12+e*t*this.config.swingAmplitude,c.y=2*Math.cos(o.stridePhase*Math.PI*2)-2,l.x=-12-e*t*this.config.swingAmplitude,l.y=-2-2*Math.cos(o.stridePhase*Math.PI*2)}const u=this.config.blendSpeed+.02*r;return this.currentTargets.leftHand.x=f(this.currentTargets.leftHand.x,l.x,t,u),this.currentTargets.leftHand.y=f(this.currentTargets.leftHand.y,l.y,t,u),this.currentTargets.rightHand.x=f(this.currentTargets.rightHand.x,c.x,t,u),this.currentTargets.rightHand.y=f(this.currentTargets.rightHand.y,c.y,t,u),s.leftArm.hand.x=this.currentTargets.leftHand.x,s.leftArm.hand.y=this.currentTargets.leftHand.y,s.rightArm.hand.x=this.currentTargets.rightHand.x,s.rightArm.hand.y=this.currentTargets.rightHand.y,s.leftArm.elbow.x=.5*(s.leftArm.shoulder.x+s.leftArm.hand.x),s.leftArm.elbow.y=.5*(s.leftArm.shoulder.y+s.leftArm.hand.y)+4,s.rightArm.elbow.x=.5*(s.rightArm.shoulder.x+s.rightArm.hand.x),s.rightArm.elbow.y=.5*(s.rightArm.shoulder.y+s.rightArm.hand.y)+4,{handTargets:{left:{...this.currentTargets.leftHand},right:{...this.currentTargets.rightHand}},poseState:h}}}const m=(t,s,i,h)=>{const e=Math.exp(-h*i);return t*e+s*(1-e)},p=t=>t.map(t=>({position:{x:t.position.x,y:t.position.y}}));class b{constructor(t={}){const s=Math.max(2,t.clothPoints??5),i=Math.max(2,t.hairSegments??4);this.cloth=Array.from({length:s},(t,s)=>({position:{x:0,y:4*s}})),this.hair=Array.from({length:i},(t,s)=>({position:{x:0,y:3*-s}})),this.equipment=[{type:"sword",position:{x:0,y:0}}],this.time=0}apply(t,s,i){this.time+=t;const h=i.wind??0,e=i.momentum||i.velocity||{x:0,y:0},n=i.facing??1,a=i.clothSway??0,o=i.hairBounce??0,r=i.equipmentJiggle??0;this.updateChain(this.cloth,{x:s.pelvis.x??0,y:s.pelvis.y+4},t,{wind:h,momentum:e,gravity:12,sway:a,bounce:.5*a}),this.updateChain(this.hair,{x:s.head.x,y:s.head.y-6},t,{wind:.8*h,momentum:e,gravity:4,sway:o,bounce:o});const l=s.rightArm.hand.x,c=s.rightArm.hand.y,u=this.equipment[0],g=Math.sin(6*this.time)*r*2,f=Math.cos(4*this.time)*r*2;return u.position.x=m(u.position.x,l-6*n+.06*e.x+g,t,10),u.position.y=m(u.position.y,c+6+.06*e.y+f,t,10),{cloth:p(this.cloth),hair:p(this.hair),equipment:this.equipment.map(t=>({type:t.type,position:{x:t.position.x,y:t.position.y}}))}}updateChain(t,s,i,h){let e=s;t.forEach((t,s)=>{const n=(h.sway??0)*Math.sin(3*this.time+.6*s),a=(h.bounce??0)*Math.cos(4*this.time+.5*s),o=e.x+h.wind*(s+1)*.3+.02*h.momentum.x+n,r=e.y+4*s+.015*h.momentum.y+.05*h.gravity+a;t.position.x=m(t.position.x,o,i,12),t.position.y=m(t.position.y,r,i,12),e=t.position})}}const y=(t,s,i,h)=>{const e=Math.exp(-h*i);return t*e+s*(1-e)};class w{constructor(t={}){this.config={windInfluence:t.windInfluence??.25,shiverMagnitude:t.shiverMagnitude??.6,windResponsiveness:t.windResponsiveness??4,shiverResponsiveness:t.shiverResponsiveness??6},this.wind=0,this.shiver=0,this.shiverPhase=0}apply(t,s,i){const h=i.wind??0,e=i.temperatureShiver??0;this.wind=y(this.wind,h,t,this.config.windResponsiveness),this.shiver=y(this.shiver,e,t,this.config.shiverResponsiveness),this.shiverPhase=(this.shiverPhase+18*t)%(2*Math.PI);const n=Math.sin(this.shiverPhase)*this.shiver*this.config.shiverMagnitude;return s.torso.x+=this.wind*this.config.windInfluence,s.head.x+=this.wind*this.config.windInfluence*1.5,s.leftArm.hand.x+=this.wind*this.config.windInfluence*1.2,s.rightArm.hand.x+=this.wind*this.config.windInfluence*1.2,s.torso.y+=.6*n,s.head.y+=.4*n,{wind:this.wind,shiver:n,temperature:e}}}class M{constructor(t={}){this.rig=new o,this.modules={core:new c(t.core),locomotion:new g(t.locomotion),combat:new d(t.combat),secondary:new b(t.secondary),environment:new w(t.environment)},this.cachedTransform={scaleX:1,scaleY:1,rotation:0,offsetX:0,offsetY:0,trails:[],skeleton:this.rig.toSkeleton(),secondaryMotion:null,environmental:null,debug:null}}buildContext(t,s={}){const i=s.overlay||{},h=s.velocity||{x:0,y:0},e=s.momentum||h,n=Math.hypot(h.x,h.y);return{deltaTime:t,playerState:s.playerState||"idle",facing:s.facing??1,velocity:h,momentum:e,speed:n,maxSpeed:s.maxSpeed??260,normalizedTime:s.normalizedTime??0,stridePhase:s.stridePhase,isGrounded:s.isGrounded??!0,pelvisOffset:s.pelvisOffset??0,breathing:s.breathing??1,fatigue:s.fatigue??0,legLiftLeft:s.legLiftLeft??0,legLiftRight:s.legLiftRight??0,groundOffset:s.groundOffset??0,wind:s.wind??0,temperatureShiver:s.temperatureShiver??0,clothSway:s.clothSway??0,hairBounce:s.hairBounce??0,equipmentJiggle:s.equipmentJiggle??0,staminaRatio:s.staminaRatio??1,healthRatio:s.healthRatio??1,inputState:s.inputState||{},attackStrength:s.attackStrength??1,attackType:s.attackType||"light",overlay:{scaleX:i.scaleX??1,scaleY:i.scaleY??1,rotation:i.rotation??0,offsetX:i.offsetX??0,offsetY:i.offsetY??0}}}composeTransform(t,s,i){const h=t.overlay,e=i?.stepPower?1.4*-i.stepPower:0;return{scaleX:h.scaleX,scaleY:h.scaleY,rotation:h.rotation+(s?.rotation??0),offsetX:h.offsetX+(s?.offsetX??0),offsetY:h.offsetY+(s?.offsetY??0)+e,trails:h.trails||[]}}update(t,s={}){const i=this.buildContext(t,s),h=this.rig.createWorkingPose(),e=this.modules.core.apply(t,h,i);i.posture=e,i.stridePhase=i.stridePhase??e?.stridePhase??i.normalizedTime;const n=this.modules.locomotion.apply(t,h,i);i.locomotion=n,i.stridePhase=n?.stridePhase??i.stridePhase;const a=this.modules.combat.apply(t,h,i);i.combat=a;const o=this.modules.secondary.apply(t,h,i),r=this.modules.environment.apply(t,h,i);this.rig.commitPose(h);const l=this.composeTransform(i,e,n);return this.cachedTransform={...l,skeleton:this.rig.toSkeleton(),secondaryMotion:o,environmental:r,debug:{state:i.playerState,stridePhase:n?.stridePhase??0,speed:i.speed,lean:e?.lean??0,wind:r?.wind??0,shiver:r?.shiver??0}},this.cachedTransform}}class k{constructor(t=400,s=300,i={}){this.x=t,this.y=s,this.facing=1,this.health=i.health||100,this.maxHealth=i.maxHealth||100,this.stamina=i.stamina||100,this.maxStamina=i.maxStamina||100,this.o=this.health,this.u=this.stamina,this.speed=i.speed||250,this.rollSpeed=i.rollSpeed||500,this.state="idle",this.previousState="idle",this.stateTimer=0,this.stateTime=0,this.stateDuration=0,this.m=0,this.p=!1,this.M="light",this.invulnerable=!1,this.invulnerabilityTimer=0,this.isGrounded=!0,this.jumpCount=0,this.nearWall=!1,this.dashCooldown=0,this.chargeTime=0,this.maxChargeTime=1.5,this.params={roll:{duration:.4,iFrameStart:.08,iFrameEnd:.36,staminaCost:25,cooldown:.8},attackLight:{duration:.4,activeStart:.28,activeEnd:.38,staminaCost:12,cooldown:.5},attackHeavy:{duration:.62,activeStart:.32,activeEnd:.48,staminaCost:24,cooldown:.8},comboWindow:{start:.55,end:.75},parry:{duration:.22,window:.18,staminaCost:10}},this.animator=new n,this.animations=a(),this.setupAnimations();const h=i.proceduralOptions||i.proceduralConfig||i.proceduralModules||{};this.proceduralAnimator=new M(h),this.attackCooldown=0,this.rollCooldown=0,this.blockHeld=!1,this.width=i.width||32,this.height=i.height||32,this.color=i.color||"#00ff88",this.sprite=i.sprite||null,this.sprite||this.loadSpriteSheet(),this.particleSystem=i.particleSystem||null,this.soundSystem=i.soundSystem||null,this.attackDamage=i.attackDamage||20,this.attackDamageHeavy=i.attackDamageHeavy||35,this.attackRange=i.attackRange||60,this.attackRangeHeavy=i.attackRangeHeavy||80,this.blockDamageReduction=i.blockDamageReduction||.5,this.stridePhase=0,this.gaitRate=1.4,this.T=0,this.footstepIntervalBase=.28,this.ik={pelvisY:0,pelvisRate:10,left:{locked:!1,y:0},right:{locked:!1,y:0},stepHeight:2},this.debugMode=!1;try{i.wasmModule&&!globalThis.wasmExports&&(globalThis.wasmExports=i.wasmModule)}catch{}}loadSpriteSheet(){this.sprite=new Image;const t=["./src/images/player-sprites.png","../src/images/player-sprites.png","../../src/images/player-sprites.png"];let s=0;const i=()=>{s<t.length?(this.sprite.src=t[s],s++):(console.warn("Player sprite sheet not found at any expected location, using fallback rendering"),this.sprite=null)};this.sprite.onload=()=>{},this.sprite.onerror=()=>{console.warn(`Player sprite sheet not found at ${this.sprite.src}, trying next path...`),i()},i()}setupAnimations(){Object.entries(this.animations).forEach(([t,s])=>{this.animator.addAnimation(t,s)}),this.animator.play("idle")}update(t,s={}){if(this.m=this.getNormalizedTime(),this.attackCooldown=Math.max(0,this.attackCooldown-t),this.rollCooldown=Math.max(0,this.rollCooldown-t),this.invulnerable&&(this.invulnerabilityTimer-=t,this.invulnerabilityTimer<=0&&(this.invulnerable=!1)),this.updateIK(t),!globalThis.wasmInputManagedExternally){let t=0,i=0;s.left&&(t-=1),s.right&&(t+=1),s.up&&(i-=1),s.down&&(i+=1),globalThis.wasmExports?.set_player_input?.(t,i,s.roll?1:0,s.jump?1:0,s.lightAttack?1:0,s.heavyAttack?1:0,s.block?1:0,s.special?1:0)}const i=globalThis.wasmExports?.get_x?.(),h=globalThis.wasmExports?.get_y?.();"number"==typeof i&&"number"==typeof h&&Number.isFinite(i)&&Number.isFinite(h)||(console.warn("WASM position returned invalid values:",{rx:i,ry:h,typeX:typeof i,typeY:typeof h}),console.warn("WASM exports available:",!!globalThis.wasmExports),globalThis.wasmExports&&(console.warn("WASM get_x function:",typeof globalThis.wasmExports.get_x),console.warn("WASM get_y function:",typeof globalThis.wasmExports.get_y))),this.x="number"==typeof i&&Number.isFinite(i)?i:.5,this.y="number"==typeof h&&Number.isFinite(h)?h:.5,this.isGrounded=1===globalThis.wasmExports?.get_is_grounded?.(),this.jumpCount=globalThis.wasmExports?.get_jump_count?.();const e=globalThis.wasmExports?.get_vel_x?.(),n=globalThis.wasmExports?.get_vel_y?.();"number"==typeof e&&"number"==typeof n&&Math.hypot(e,n)>.001&&(this.facing=e>=0?1:-1),this.animator&&"function"==typeof this.animator.setFacing&&this.animator.setFacing(this.facing>=0?"right":"left");const a=globalThis.wasmExports?.get_anim_offset_x?.()??0,o=globalThis.wasmExports?.get_anim_offset_y?.()??0,r=globalThis.wasmExports?.get_anim_scale_x?.()??1,l=globalThis.wasmExports?.get_anim_scale_y?.()??1,c=globalThis.wasmExports?.get_anim_rotation?.()??0,u=globalThis.wasmExports?.get_anim_pelvis_y?.()??0,g=globalThis.wasmExports?.get_player_anim_state?.();"number"==typeof g&&this.setState(this.getAnimStateName(g),!0);const f=Number.isFinite(e)?e:0,d=Number.isFinite(n)?n:0,m=this.animator.update(t,{x:this.x,y:this.y},{x:f,y:d},this.isGrounded)||{scaleX:1,scaleY:1,rotation:0,offsetX:0,offsetY:0},p=globalThis.wasmExports&&"number"==typeof a?{scaleX:r,scaleY:l,rotation:c,offsetX:a,offsetY:o}:this.computePoseOverlay(s),b=globalThis.wasmExports?.get_anim_leg_lift_left?.()??0,y=globalThis.wasmExports?.get_anim_leg_lift_right?.()??0,w=globalThis.wasmExports?.get_anim_breathing_intensity?.()??1,M=globalThis.wasmExports?.get_anim_fatigue_factor?.()??0,k=globalThis.wasmExports?.get_anim_wind_response?.()??0,T=globalThis.wasmExports?.get_anim_ground_adapt?.()??0,v=globalThis.wasmExports?.get_anim_temperature_shiver?.()??0,x=globalThis.wasmExports?.get_anim_cloth_sway?.()??0,S=globalThis.wasmExports?.get_anim_hair_bounce?.()??0,A=globalThis.wasmExports?.get_anim_equipment_jiggle?.()??0,_=globalThis.wasmExports?.get_anim_momentum_x?.()??f,Y=globalThis.wasmExports?.get_anim_momentum_y?.()??d,X=this.getNormalizedTime(),j=globalThis.wasmExports?.get_hp?.()??globalThis.wasmExports?.get_health?.()??this.health,P=globalThis.wasmExports?.get_stamina?.()??this.stamina;this.o=j,this.u=P;const R=this.proceduralAnimator.update(t,{playerState:this.state,facing:this.facing,velocity:{x:f,y:d},momentum:{x:_,y:Y},normalizedTime:X,isGrounded:this.isGrounded,pelvisOffset:u,breathing:w,fatigue:M,legLiftLeft:b,legLiftRight:y,groundOffset:T,wind:k,temperatureShiver:v,clothSway:x,hairBounce:S,equipmentJiggle:A,staminaRatio:this.maxStamina?P/this.maxStamina:1,healthRatio:this.maxHealth?j/this.maxHealth:1,attackStrength:"heavy"===this.M?1.35:1,attackType:this.M,inputState:s,maxSpeed:this.speed,stridePhase:this.stridePhase,overlay:p});this.currentTransform={scaleX:m.scaleX*(R.scaleX??1),scaleY:m.scaleY*(R.scaleY??1),rotation:m.rotation+(R.rotation??0),offsetX:m.offsetX+(R.offsetX??0),offsetY:m.offsetY+(R.offsetY??0),trails:m.trails||[],skeleton:R.skeleton,secondaryMotion:R.secondaryMotion,environmental:R.environmental,debug:R.debug}}getNormalizedTime(){try{const t=t=>"function"==typeof globalThis.wasmExports?.[t]?globalThis.wasmExports[t]():void 0,s=t("get_attack_state"),i=t("get_attack_state_time"),h=t("get_time_seconds");if("number"==typeof s&&"number"==typeof i&&"number"==typeof h){const e=Math.max(0,h-i);let n=0;if(1===s?n=t("get_attack_windup_sec")??this.params.attackLight.duration:2===s?n=t("get_attack_active_sec")??this.params.attackLight.duration:3===s&&(n=t("get_attack_recovery_sec")??this.params.attackLight.duration),n&&n>0)return Math.max(0,Math.min(1,e/n))}if(1===t("get_is_rolling")){const s=t("get_roll_duration")||this.params.roll.duration,i=t("get_player_state_timer");if("number"==typeof i&&s>0)return Math.max(0,Math.min(1,i/s))}const e=t("get_player_state_timer");if("number"==typeof e){let t=0;switch(this.state){case"rolling":t=this.params.roll.duration;break;case"attacking":t="heavy"===this.M?this.params.attackHeavy.duration:this.params.attackLight.duration;break;default:t=0}if(t>0)return Math.max(0,Math.min(1,e/t))}}catch{}try{const t=this.animator?.controller?.currentAnimation;if(t&&Array.isArray(t.frames)&&t.frames.length>1){const s=t.currentFrame/(t.frames.length-1);return Math.max(0,Math.min(1,s))}}catch{}return 0}startRoll(t){if(!globalThis.wasmExports?.on_roll_start?.())return;let s=0,i=0;t.left&&(s-=1),t.right&&(s+=1),t.up&&(i-=1),t.down&&(i+=1),0===s&&0===i&&(s=this.facing);const h=Math.hypot(s,i);h>0&&(s/=h,i/=h),this.rollDirection={x:s,y:i},this.particleSystem&&this.particleSystem.createDustCloud(this.x,this.y),this.soundSystem&&this.soundSystem.play("roll")}startAttack(t="light"){"heavy"===t?this.params.attackHeavy:this.params.attackLight,this.M=t,globalThis.wasmExports?.on_attack?.("heavy"===t?1:0)&&this.soundSystem&&this.soundSystem.play("attack")}queueAttack(t="light"){this.canAttack()?this.startAttack(t):"attacking"===this.state&&(this.p=!0)}tryRoll(t=null){const s={};t&&(t.x||t.y)&&(s.left=t.x<-.5,s.right=t.x>.5,s.up=t.y<-.5,s.down=t.y>.5),this.startRoll(s)}tryParry(){"dead"!==this.state&&globalThis.wasmExports?.on_parry?.()&&this.soundSystem&&this.soundSystem.play("parry")}executeAttack(){const t="heavy"===this.M,s=t?this.attackRangeHeavy:this.attackRange,i=t?this.attackDamageHeavy:this.attackDamage,h=this.x+this.facing*s/2,e=this.y;return this.particleSystem&&(t?this.particleSystem.createChargedSlash?.(h,e,this.facing,1):this.particleSystem.createSlashEffect(h,e,this.facing)),{x:h,y:e,width:s,height:this.height,damage:i}}startBlock(){globalThis.wasmExports?.set_blocking?.(1,this.facing,0)&&(this.blockHeld=!0,this.particleSystem&&this.particleSystem.createShieldEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("block"))}stopBlock(){globalThis.wasmExports?.set_blocking?.(0,this.facing,0),this.blockHeld=!1}takeDamage(t,s=0,i=0){return!this.invulnerable&&"dead"!==this.state&&("blocking"===this.state?(this.particleSystem&&this.particleSystem.createBlockImpact(this.x,this.y),this.soundSystem&&this.soundSystem.play("blockImpact")):(this.particleSystem&&this.particleSystem.createBloodEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("hurt")),!0)}die(){this.particleSystem&&this.particleSystem.createDeathEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("death")}respawn(t,s){this.particleSystem&&this.particleSystem.createRespawnEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("respawn")}setState(t,s=!1){if(this.state===t)return;this.previousState=this.state,this.state=t,this.stateTime=0,this.stateDuration=0,this.m=0;const i=this.stateNameToNumber(t);this.animator.setAnimState(i)}canAttack(){const t=Math.min(this.params.attackLight.staminaCost,this.params.attackHeavy.staminaCost);return this.attackCooldown<=0&&this.stamina>=t&&"dead"!==this.state&&"rolling"!==this.state&&"hurt"!==this.state}canRoll(){return this.rollCooldown<=0&&this.stamina>=this.params.roll.staminaCost&&"dead"!==this.state&&"attacking"!==this.state&&"hurt"!==this.state}canBlock(){return this.stamina>0&&"dead"!==this.state&&"rolling"!==this.state&&"attacking"!==this.state&&"hurt"!==this.state}render(t,s=null){let i=0,h=0;const e=s?.x||0,n=s?.y||0;if(globalThis.gameRenderer&&"function"==typeof globalThis.gameRenderer.wasmToWorld){const t=globalThis.gameRenderer.wasmToWorld(this.x||.5,this.y||.5);i=t.x-e,h=t.y-n}else{const t=800,s=600;i=(this.x||0)*t-e,h=(this.y||0)*s-n}t.save(),1===globalThis.wasmExports?.get_is_invulnerable?.()&&(t.globalAlpha=.5+.3*Math.sin(.02*Date.now()));const a=this.animator.controller.getCurrentFrame();if(this.sprite&&a){t.save();const s=this.currentTransform||{scaleX:1,scaleY:1,rotation:0,offsetX:0,offsetY:0},e=i+s.offsetX,n=h+s.offsetY;t.translate(e,n),t.rotate(s.rotation),t.scale(this.facing<0?-s.scaleX:s.scaleX,s.scaleY),s.secondaryMotion&&this.debugMode&&this.renderSecondaryMotion(t,s.secondaryMotion),t.drawImage(this.sprite,a.x,a.y,a.width,a.height,-this.width/2,-this.height/2,this.width,this.height),s.skeleton&&this.debugMode&&this.renderSkeletalOverlay(t,s.skeleton),t.restore()}else{t.fillStyle=this.color||"#4a90e2","hurt"===this.state?t.fillStyle="#ff4444":"blocking"===this.state?t.fillStyle="#4444ff":"rolling"===this.state&&(t.fillStyle="#ffff44");const s=this.width||32,e=this.height||32;t.fillRect(i-s/2,h-e/2,s,e),t.strokeStyle="#ffffff",t.lineWidth=2,t.strokeRect(i-s/2,h-e/2,s,e),t.fillStyle="#ffffff",t.beginPath(),t.arc(i,h,3,0,2*Math.PI),t.fill()}const o=h-this.height/2-10;t.fillStyle="rgba(0, 0, 0, 0.5)",t.fillRect(i-20,o,40,4);const r=(Number.isFinite(this.o)?this.o:globalThis.wasmExports?.get_hp?.()??globalThis.wasmExports?.get_health?.()??this.health)/this.maxHealth;t.fillStyle=r>.5?"#00ff00":r>.25?"#ffff00":"#ff0000",t.fillRect(i-20,o,40*r,4);const l=o+5;t.fillStyle="rgba(0, 0, 0, 0.5)",t.fillRect(i-20,l,40,2);const c=(Number.isFinite(this.u)?this.u:globalThis.wasmExports?.get_stamina?.()??this.stamina)/this.maxStamina;t.fillStyle="#00aaff",t.fillRect(i-20,l,40*c,2),this.debugMode&&this.renderDebug(t,s,i,h),t.restore()}computePoseOverlay(t){const s=this.getNormalizedTime();let i=1,h=1,e=0,n=this.ik?.pelvisY||0;const a=globalThis.wasmExports?.get_vel_x?.()??0;globalThis.wasmExports?.get_vel_y?.();const o=globalThis.wasmExports?.get_speed?.()??this.speed;if("running"===this.state&&(e+=Math.max(-.15,Math.min(.15,a/(o||1)*.25))),"blocking"===this.state&&(h*=.98,n+=1),"rolling"===this.state){const t=s<.5?2*s:2*(1-s);h*=1-.06*t,i*=1+.04*t,e+=.12*(this.facing>=0?1:-1)*t}return this.state,{scaleX:i,scaleY:h,rotation:e,offsetX:0,offsetY:n}}updateIK(t){const s=globalThis.wasmExports?.get_anim_pelvis_y?.();this.ik.pelvisY="number"==typeof s?s:0;const i=globalThis.wasmExports?.get_vel_x?.()??0,h=globalThis.wasmExports?.get_vel_y?.()??0;if(Math.hypot(i,h)>10){this.stridePhase=(this.stridePhase+t*this.gaitRate)%1;const s=this.stridePhase<.25||this.stridePhase>.75;this.ik.left.locked=s,this.ik.right.locked=!s}else this.ik.left.locked=!1,this.ik.right.locked=!1,this.stridePhase=0}renderDebug(t,s,i,h){const e=i,n=h-this.height/2-18;t.save(),t.fillStyle="rgba(0,0,0,0.35)",t.fillRect(e-24,n,48,4),t.fillStyle="#00ffaa",t.fillRect(e-24,n,this.stridePhase%1*48,4),t.strokeStyle="#ffaa00",t.beginPath(),t.moveTo(e+30,n+2),t.lineTo(e+30,n+2-(this.ik?.pelvisY||0)),t.stroke();const a=globalThis.wasmExports?.get_attack_state?.()??0,o=globalThis.wasmExports?.get_attack_state_time?.()??0,r=globalThis.wasmExports?.get_time_seconds?.()??0;let l=0;1===a?l=(r-o)/(globalThis.wasmExports?.get_attack_windup_sec?.()??this.params.attackLight.duration):2===a?l=(r-o)/(globalThis.wasmExports?.get_attack_active_sec?.()??this.params.attackLight.duration):3===a&&(l=(r-o)/(globalThis.wasmExports?.get_attack_recovery_sec?.()??this.params.attackLight.duration));const c=n+8;t.fillStyle="rgba(0,0,0,0.35)",t.fillRect(e-24,c,48,3),2===a&&(t.fillStyle="#ff4477",t.fillRect(e-24+48*.28,c,48*(.38-.28),3)),1===globalThis.wasmExports?.get_is_rolling?.()&&(t.fillStyle="#ffee55",t.fillRect(e-24+3.84,c,48*(.36-.08),3)),t.fillStyle="#ffffff",t.fillRect(e-24+48*l-1,c-1,2,5),t.restore()}getAnimStateName(t){switch(t){case 0:default:return"idle";case 1:return"running";case 2:return"attacking";case 3:return"blocking";case 4:return"rolling";case 5:return"hurt";case 6:return"dead";case 7:return"jumping";case 8:return"doubleJumping";case 9:return"landing";case 10:return"wallSliding";case 11:return"dashing";case 12:return"chargingAttack"}}stateNameToNumber(t){switch(t){case"idle":default:return 0;case"running":return 1;case"attacking":return 2;case"blocking":return 3;case"rolling":return 4;case"hurt":return 5;case"dead":return 6;case"jumping":return 7;case"doubleJumping":return 8;case"landing":return 9;case"wallSliding":return 10;case"dashing":return 11;case"chargingAttack":return 12}}getAnimationStateCode(){return this.stateNameToNumber(this.state)}getAnimationInfo(){return{state:this.state,animation:this.animator.controller.currentAnimation?.name,frame:this.animator.controller.getCurrentFrame(),stateTimer:globalThis.wasmExports?.get_player_state_timer?.()??0,invulnerable:1===globalThis.wasmExports?.get_is_invulnerable?.(),proceduralData:this.currentTransform?.debug||null,skeletalData:this.currentTransform?.skeleton||null,secondaryMotion:this.currentTransform?.secondaryMotion||null,environmental:this.currentTransform?.environmental||null}}renderSecondaryMotion(t,s){s&&(t.save(),t.globalAlpha=.8,s.cloth&&(t.strokeStyle="#4A4A4A",t.lineWidth=2,t.beginPath(),s.cloth.forEach((s,i)=>{0===i?t.moveTo(s.position.x,s.position.y):t.lineTo(s.position.x,s.position.y)}),t.stroke()),s.hair&&(t.strokeStyle="#8B4513",t.lineWidth=3,t.lineCap="round",t.beginPath(),s.hair.forEach((s,i)=>{0===i?t.moveTo(s.position.x,s.position.y):t.lineTo(s.position.x,s.position.y)}),t.stroke()),s.equipment&&s.equipment.forEach(s=>{t.fillStyle="sword"===s.type?"#C0C0C0":"#8B4513",t.fillRect(s.position.x-2,s.position.y-1,4,2)}),t.restore())}renderSkeletalOverlay(t,s){s&&(t.save(),t.strokeStyle="#00ff88",t.fillStyle="#ffff44",t.lineWidth=1,t.globalAlpha=.6,this.drawBone(t,s.torso,s.head),this.drawBone(t,s.torso,s.pelvis),this.drawBone(t,s.leftArm.shoulder,s.leftArm.elbow),this.drawBone(t,s.leftArm.elbow,s.leftArm.hand),this.drawBone(t,s.rightArm.shoulder,s.rightArm.elbow),this.drawBone(t,s.rightArm.elbow,s.rightArm.hand),this.drawBone(t,s.leftLeg.hip,s.leftLeg.knee),this.drawBone(t,s.leftLeg.knee,s.leftLeg.foot),this.drawBone(t,s.rightLeg.hip,s.rightLeg.knee),this.drawBone(t,s.rightLeg.knee,s.rightLeg.foot),[s.head,s.torso,s.pelvis,s.leftArm.shoulder,s.leftArm.elbow,s.leftArm.hand,s.rightArm.shoulder,s.rightArm.elbow,s.rightArm.hand,s.leftLeg.hip,s.leftLeg.knee,s.leftLeg.foot,s.rightLeg.hip,s.rightLeg.knee,s.rightLeg.foot].forEach(s=>{s&&void 0!==s.x&&void 0!==s.y&&(t.beginPath(),t.arc(s.x,s.y,2,0,2*Math.PI),t.fill())}),t.restore())}drawBone(t,s,i){s&&i&&void 0!==s.x&&void 0!==i.x&&(t.beginPath(),t.moveTo(s.x,s.y),t.lineTo(i.x,i.y),t.stroke())}static createInputFromKeys(t){return{left:t.a||t.arrowleft,right:t.d||t.arrowright,up:t.w||t.arrowup,down:t.s||t.arrowdown,lightAttack:t.j||t[1],heavyAttack:t.k||t[2],block:t.shift||t[3],roll:t.control||t[4],special:t.l||t[5],attack:t.j||t[" "],jump:t.space||t.z}}jump(){globalThis.wasmExports?.on_jump?.(),this.particleSystem&&this.particleSystem.createDustCloud(this.x,this.y+this.height/2),this.soundSystem&&this.soundSystem.play("jump")}}k.attachDebugToggle=(t,s="F3")=>{if(!t||t.v)return;const i=(s||"F3").toLowerCase(),h=s=>{(s.key||"").toLowerCase()===i.toLowerCase()&&(t.debugMode=!t.debugMode)};try{addEventListener("keydown",h),t.v=!0}catch{}};export{k as AnimatedPlayer,k as default};