{"version":3,"file":"wolf-animation.js","sources":["../src/utils/particle-system.js","../src/animation/wolf-animation.js"],"sourcesContent":["// Advanced Particle System for Game Feel Enhancement\n// Provides various particle effects for combat, movement, and environmental interactions\n\nexport class Particle {\n    constructor(x, y, config = {}) {\n        this.x = x\n        this.y = y\n        this.vx = config.vx || 0\n        this.vy = config.vy || 0\n        this.ax = config.ax || 0  // acceleration x\n        this.ay = config.ay || 0  // acceleration y\n        this.life = config.life || 1.0\n        this.maxLife = config.life || 1.0\n        this.size = config.size || 4\n        this.sizeDecay = config.sizeDecay || 0.98\n        this.color = config.color || { r: 255, g: 255, b: 255 }\n        this.alpha = config.alpha || 1.0\n        this.alphaDecay = config.alphaDecay || 0.98\n        this.rotation = config.rotation || 0\n        this.rotationSpeed = config.rotationSpeed || 0\n        this.trail = config.trail || false\n        this.trailPositions = []\n        this.blendMode = config.blendMode || 'source-over'\n        this.glow = config.glow || false\n        this.glowSize = config.glowSize || 2\n        this.shape = config.shape || 'circle' // circle, square, star, triangle\n        this.friction = config.friction || 1.0\n        this.bounce = config.bounce || 0\n        this.gravity = config.gravity || 0\n        this.turbulence = config.turbulence || 0\n        this.scaleWithVelocity = config.scaleWithVelocity || false\n    }\n\n    update(deltaTime) {\n        // Apply physics\n        this.vx *= this.friction\n        this.vy *= this.friction\n        this.vx += this.ax * deltaTime\n        this.vy += (this.ay + this.gravity) * deltaTime\n        \n        // Apply turbulence\n        if (this.turbulence > 0) {\n            let s = Number((globalThis.runSeedForVisuals ?? 1n) % 2147483647n)\n            s = (s * 48271) % 2147483647\n            const n1 = (s / 2147483647) - 0.5\n            s = (s * 48271) % 2147483647\n            const n2 = (s / 2147483647) - 0.5\n            this.vx += n1 * this.turbulence\n            this.vy += n2 * this.turbulence\n        }\n        \n        // Update position\n        this.x += this.vx * deltaTime\n        this.y += this.vy * deltaTime\n        \n        // Update rotation\n        this.rotation += this.rotationSpeed * deltaTime\n        \n        // Update trail\n        if (this.trail) {\n            this.trailPositions.push({ x: this.x, y: this.y, alpha: this.alpha })\n            if (this.trailPositions.length > 10) {\n                this.trailPositions.shift()\n            }\n        }\n        \n        // Decay properties\n        this.life -= deltaTime\n        this.size *= this.sizeDecay\n        this.alpha *= this.alphaDecay\n        \n        // Bounce off boundaries\n        if (this.bounce > 0) {\n            if (this.x < 0 || this.x > 1280) {\n                this.vx *= -this.bounce\n                this.x = Math.max(0, Math.min(1280, this.x))\n            }\n            if (this.y < 0 || this.y > 720) {\n                this.vy *= -this.bounce\n                this.y = Math.max(0, Math.min(720, this.y))\n            }\n        }\n        \n        return this.life > 0 && this.alpha > 0.01 && this.size > 0.1\n    }\n\n    render(ctx) {\n        ctx.save()\n        \n        // Set blend mode\n        ctx.globalCompositeOperation = this.blendMode\n        ctx.globalAlpha = this.alpha\n        \n        // Draw trail\n        if (this.trail && this.trailPositions.length > 1) {\n            ctx.strokeStyle = `rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.alpha * 0.5})`\n            ctx.lineWidth = this.size * 0.5\n            ctx.lineCap = 'round'\n            ctx.beginPath()\n            this.trailPositions.forEach((pos, i) => {\n                if (i === 0) {\n                    ctx.moveTo(pos.x, pos.y)\n                } else {\n                    ctx.lineTo(pos.x, pos.y)\n                }\n            })\n            ctx.stroke()\n        }\n        \n        // Draw glow\n        if (this.glow) {\n            const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size * this.glowSize)\n            gradient.addColorStop(0, `rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.alpha})`)\n            gradient.addColorStop(1, `rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, 0)`)\n            ctx.fillStyle = gradient\n            ctx.beginPath()\n            ctx.arc(this.x, this.y, this.size * this.glowSize, 0, Math.PI * 2)\n            ctx.fill()\n        }\n        \n        // Draw particle\n        ctx.translate(this.x, this.y)\n        ctx.rotate(this.rotation)\n        \n        let drawSize = this.size\n        if (this.scaleWithVelocity) {\n            const speed = Math.sqrt(this.vx * this.vx + this.vy * this.vy)\n            drawSize *= (1 + speed * 0.1)\n        }\n        \n        ctx.fillStyle = `rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.alpha})`\n        \n        switch (this.shape) {\n            case 'square':\n                ctx.fillRect(-drawSize/2, -drawSize/2, drawSize, drawSize)\n                break\n            case 'star':\n                this.drawStar(ctx, 0, 0, 5, drawSize, drawSize * 0.5)\n                break\n            case 'triangle':\n                ctx.beginPath()\n                ctx.moveTo(0, -drawSize)\n                ctx.lineTo(-drawSize * 0.866, drawSize * 0.5)\n                ctx.lineTo(drawSize * 0.866, drawSize * 0.5)\n                ctx.closePath()\n                ctx.fill()\n                break\n            case 'circle':\n            default:\n                ctx.beginPath()\n                ctx.arc(0, 0, drawSize, 0, Math.PI * 2)\n                ctx.fill()\n                break\n        }\n        \n        ctx.restore()\n    }\n\n    drawStar(ctx, cx, cy, spikes, outerRadius, innerRadius) {\n        let rot = Math.PI / 2 * 3\n        let x\n        let y\n        const step = Math.PI / spikes\n\n        ctx.beginPath()\n        ctx.moveTo(cx, cy - outerRadius)\n        \n        for (let i = 0; i < spikes; i++) {\n            x = cx + Math.cos(rot) * outerRadius\n            y = cy + Math.sin(rot) * outerRadius\n            ctx.lineTo(x, y)\n            rot += step\n\n            x = cx + Math.cos(rot) * innerRadius\n            y = cy + Math.sin(rot) * innerRadius\n            ctx.lineTo(x, y)\n            rot += step\n        }\n        \n        ctx.lineTo(cx, cy - outerRadius)\n        ctx.closePath()\n        ctx.fill()\n    }\n}\n\nexport class ParticleSystem {\n    constructor() {\n        this.particles = []\n        this.emitters = []\n    }\n\n    update(deltaTime) {\n        // Update particles\n        this.particles = this.particles.filter(particle => particle.update(deltaTime))\n        \n        // Update emitters\n        this.emitters = this.emitters.filter(emitter => {\n            emitter.update(deltaTime)\n            return emitter.active\n        })\n    }\n\n    render(ctx) {\n        // Sort particles by blend mode for better batching\n        const particlesByBlendMode = {}\n        this.particles.forEach(particle => {\n            if (!particlesByBlendMode[particle.blendMode]) {\n                particlesByBlendMode[particle.blendMode] = []\n            }\n            particlesByBlendMode[particle.blendMode].push(particle)\n        })\n        \n        // Render particles grouped by blend mode\n        for (const [, particles] of Object.entries(particlesByBlendMode)) {\n            particles.forEach(particle => particle.render(ctx))\n        }\n    }\n\n    addParticle(particle) {\n        this.particles.push(particle)\n    }\n\n    addEmitter(emitter) {\n        this.emitters.push(emitter)\n        emitter.system = this\n    }\n\n    // Emit a burst of particles from an effect definition\n    emit(x, y, effect = {}) {\n        const count = Math.max(1, Math.round(((effect.emitRate || 4) / 60)))\n        const angleMin = (effect.emitAngle && typeof effect.emitAngle.min === 'number') ? effect.emitAngle.min : 0\n        const angleMax = (effect.emitAngle && typeof effect.emitAngle.max === 'number') ? effect.emitAngle.max : Math.PI * 2\n        const spdMin = (effect.particleSpeed && typeof effect.particleSpeed.min === 'number') ? effect.particleSpeed.min : 20\n        const spdMax = (effect.particleSpeed && typeof effect.particleSpeed.max === 'number') ? effect.particleSpeed.max : 60\n        const sizeMin = (effect.particleSize && typeof effect.particleSize.min === 'number') ? effect.particleSize.min : 2\n        const sizeMax = (effect.particleSize && typeof effect.particleSize.max === 'number') ? effect.particleSize.max : 5\n        const lifeSec = typeof effect.particleLife === 'number' ? Math.max(0.05, effect.particleLife / 1000) : 0.4\n        let color = { r: 200, g: 200, b: 200 }\n        let alpha = 0.6\n        if (typeof effect.particleColor === 'string') {\n            const m = effect.particleColor.match(/rgba?\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*([0-9.]+))?\\)/i)\n            if (m) {\n                color = { r: Number(m[1]), g: Number(m[2]), b: Number(m[3]) }\n                alpha = m[4] != null ? Number(m[4]) : 1\n            }\n        }\n        for (let i = 0; i < count; i++) {\n            // cheap LCG\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const r1 = seed / 4294967296\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const r2 = seed / 4294967296\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const r3 = seed / 4294967296\n            const angle = angleMin + r1 * (angleMax - angleMin)\n            const speed = spdMin + r2 * (spdMax - spdMin)\n            const size = sizeMin + r3 * (sizeMax - sizeMin)\n            this.addParticle(new Particle(x, y, {\n                vx: Math.cos(angle) * speed,\n                vy: Math.sin(angle) * speed,\n                color,\n                size,\n                life: lifeSec,\n                alpha,\n                gravity: typeof effect.gravity === 'number' ? effect.gravity : 0,\n                alphaDecay: 0.96,\n                sizeDecay: effect.expanding ? 1.02 : 0.98,\n                glow: !!effect.expanding,\n                blendMode: effect.expanding ? 'screen' : 'source-over'\n            }))\n        }\n    }\n\n    // Preset effects\n    createBloodSplatter(x, y, direction = null) {\n        const baseSeed = Number((globalThis.runSeedForVisuals ?? 1n) % 0xffffffffn)\n        let seed = baseSeed >>> 0\n        const count = 15 + ((seed = (seed * 1664525 + 1013904223) >>> 0), (seed / 4294967296) * 10)\n        const baseSpeed = 150\n        \n        for (let i = 0; i < count; i++) {\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const rA = seed / 4294967296\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const rB = seed / 4294967296\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const rC = seed / 4294967296\n            const angle = direction ? \n                direction + (rA - 0.5) * Math.PI * 0.5 :\n                rA * Math.PI * 2\n            const speed = baseSpeed * (0.5 + rB * 0.5)\n            const size = 2 + rC * 4\n            \n            this.addParticle(new Particle(x, y, {\n                vx: Math.cos(angle) * speed,\n                vy: Math.sin(angle) * speed,\n                color: { r: 180 + Math.floor(((seed = (seed * 1664525 + 1013904223) >>> 0), seed / 4294967296) * 40), g: 0, b: 0 },\n                size: size,\n                life: 0.5 + (((seed = (seed * 1664525 + 1013904223) >>> 0), seed / 4294967296)) * 0.5,\n                gravity: 300,\n                friction: 0.95,\n                bounce: 0.3,\n                alphaDecay: 0.95,\n                sizeDecay: 0.98,\n                trail: size > 3,\n                blendMode: 'multiply'\n            }))\n        }\n        \n        // Add some mist particles\n        for (let i = 0; i < 5; i++) {\n            this.addParticle(new Particle(x, y, {\n                vx: (Math.random() - 0.5) * 50,\n                vy: (Math.random() - 0.5) * 50,\n                color: { r: 150, g: 0, b: 0 },\n                size: 15 + Math.random() * 10,\n                life: 0.8,\n                alpha: 0.3,\n                alphaDecay: 0.96,\n                sizeDecay: 1.01,\n                blendMode: 'multiply'\n            }))\n        }\n    }\n\n    createHitSpark(x, y, color = { r: 255, g: 200, b: 100 }) {\n        let seed = Number((globalThis.runSeedForVisuals ?? 1n) % 0xffffffffn) >>> 0\n        const count = 8 + (((seed = (seed * 1664525 + 1013904223) >>> 0), seed / 4294967296) * 8)\n        \n        for (let i = 0; i < count; i++) {\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const angle = (Math.PI * 2 * i) / count + (seed / 4294967296) * 0.5\n            seed = (seed * 1664525 + 1013904223) >>> 0\n            const speed = 200 + (seed / 4294967296) * 150\n            \n            this.addParticle(new Particle(x, y, {\n                vx: Math.cos(angle) * speed,\n                vy: Math.sin(angle) * speed,\n                color: color,\n                size: 2 + (((seed = (seed * 1664525 + 1013904223) >>> 0), seed / 4294967296) * 3),\n                life: 0.2 + (((seed = (seed * 1664525 + 1013904223) >>> 0), seed / 4294967296) * 0.3),\n                alphaDecay: 0.92,\n                sizeDecay: 0.95,\n                glow: true,\n                glowSize: 3,\n                shape: 'star',\n                blendMode: 'screen',\n                trail: true\n            }))\n        }\n        \n        // Central flash\n        this.addParticle(new Particle(x, y, {\n            color: { r: 255, g: 255, b: 255 },\n            size: 30,\n            life: 0.1,\n            alpha: 0.8,\n            alphaDecay: 0.85,\n            sizeDecay: 1.15,\n            glow: true,\n            glowSize: 2,\n            blendMode: 'screen'\n        }))\n    }\n\n    createDustCloud(x, y, radius = 30) {\n        const count = 10 + Math.random() * 10\n        \n        for (let i = 0; i < count; i++) {\n            const angle = Math.random() * Math.PI * 2\n            const distance = Math.random() * radius\n            const px = x + Math.cos(angle) * distance\n            const py = y + Math.sin(angle) * distance\n            \n            this.addParticle(new Particle(px, py, {\n                vx: (Math.random() - 0.5) * 30,\n                vy: -Math.random() * 50 - 20,\n                color: { r: 150, g: 130, b: 100 },\n                size: 10 + Math.random() * 15,\n                life: 0.8 + Math.random() * 0.4,\n                alpha: 0.4,\n                alphaDecay: 0.97,\n                sizeDecay: 1.01,\n                turbulence: 5,\n                blendMode: 'multiply'\n            }))\n        }\n    }\n\n    createRollDust(x, y, direction) {\n        const count = 5\n        for (let i = 0; i < count; i++) {\n            const offset = (i - count/2) * 10\n            this.addParticle(new Particle(\n                x - Math.cos(direction) * 20,\n                y - Math.sin(direction) * 20 + offset,\n                {\n                    vx: -Math.cos(direction) * 50 + (Math.random() - 0.5) * 20,\n                    vy: -Math.sin(direction) * 50 + (Math.random() - 0.5) * 20,\n                    color: { r: 180, g: 160, b: 140 },\n                    size: 8 + Math.random() * 4,\n                    life: 0.4,\n                    alpha: 0.5,\n                    alphaDecay: 0.95,\n                    sizeDecay: 1.02,\n                    blendMode: 'multiply'\n                }\n            ))\n        }\n    }\n\n    createBlockSpark(x, y, angle) {\n        // Directional sparks\n        for (let i = 0; i < 12; i++) {\n            const sparkAngle = angle + (Math.random() - 0.5) * Math.PI * 0.3\n            const speed = 250 + Math.random() * 150\n            \n            this.addParticle(new Particle(x, y, {\n                vx: Math.cos(sparkAngle) * speed,\n                vy: Math.sin(sparkAngle) * speed,\n                color: { r: 255, g: 230, b: 150 },\n                size: 1 + Math.random() * 2,\n                life: 0.3,\n                alphaDecay: 0.90,\n                friction: 0.92,\n                glow: true,\n                glowSize: 4,\n                shape: Math.random() > 0.5 ? 'star' : 'circle',\n                blendMode: 'screen',\n                trail: true,\n                gravity: 100\n            }))\n        }\n        \n        // Impact ring\n        this.addParticle(new Particle(x, y, {\n            color: { r: 255, g: 255, b: 200 },\n            size: 5,\n            life: 0.2,\n            alpha: 0.6,\n            alphaDecay: 0.85,\n            sizeDecay: 1.25,\n            shape: 'circle',\n            blendMode: 'screen',\n            glow: true,\n            glowSize: 3\n        }))\n    }\n\n    createPerfectParryFlash(x, y) {\n        // Large flash effect\n        this.addParticle(new Particle(x, y, {\n            color: { r: 100, g: 200, b: 255 },\n            size: 100,\n            life: 0.3,\n            alpha: 0.8,\n            alphaDecay: 0.90,\n            sizeDecay: 1.08,\n            glow: true,\n            glowSize: 2,\n            blendMode: 'screen'\n        }))\n        \n        // Ring of particles\n        const count = 16\n        for (let i = 0; i < count; i++) {\n            const angle = (Math.PI * 2 * i) / count\n            const speed = 300\n            \n            this.addParticle(new Particle(x, y, {\n                vx: Math.cos(angle) * speed,\n                vy: Math.sin(angle) * speed,\n                color: { r: 150, g: 200, b: 255 },\n                size: 4,\n                life: 0.5,\n                alphaDecay: 0.94,\n                friction: 0.90,\n                glow: true,\n                glowSize: 3,\n                shape: 'star',\n                blendMode: 'screen',\n                trail: true\n            }))\n        }\n    }\n\n    createEnemyDeathExplosion(x, y) {\n        // Main explosion\n        for (let i = 0; i < 30; i++) {\n            const angle = Math.random() * Math.PI * 2\n            const speed = 100 + Math.random() * 200\n            \n            this.addParticle(new Particle(x, y, {\n                vx: Math.cos(angle) * speed,\n                vy: Math.sin(angle) * speed,\n                color: { \n                    r: 255, \n                    g: 100 + Math.random() * 100, \n                    b: Math.random() * 100 \n                },\n                size: 3 + Math.random() * 5,\n                life: 0.5 + Math.random() * 0.5,\n                gravity: 200,\n                friction: 0.94,\n                alphaDecay: 0.95,\n                sizeDecay: 0.97,\n                glow: true,\n                glowSize: 2,\n                blendMode: 'screen'\n            }))\n        }\n        \n        // Smoke\n        for (let i = 0; i < 8; i++) {\n            this.addParticle(new Particle(x, y, {\n                vx: (Math.random() - 0.5) * 50,\n                vy: -Math.random() * 100 - 50,\n                color: { r: 80, g: 80, b: 80 },\n                size: 20 + Math.random() * 20,\n                life: 1.0,\n                alpha: 0.5,\n                alphaDecay: 0.97,\n                sizeDecay: 1.02,\n                blendMode: 'multiply'\n            }))\n        }\n    }\n\n    createFootstep(x, y, size = 1) {\n        const count = 3\n        for (let i = 0; i < count; i++) {\n            this.addParticle(new Particle(\n                x + (Math.random() - 0.5) * 10,\n                y + (Math.random() - 0.5) * 5,\n                {\n                    vx: (Math.random() - 0.5) * 20,\n                    vy: -Math.random() * 30 - 10,\n                    color: { r: 160, g: 140, b: 120 },\n                    size: (3 + Math.random() * 2) * size,\n                    life: 0.3,\n                    alpha: 0.3,\n                    alphaDecay: 0.94,\n                    sizeDecay: 1.01,\n                    blendMode: 'multiply'\n                }\n            ))\n        }\n    }\n\n    clear() {\n        this.particles = []\n        this.emitters = []\n    }\n\n    // Compatibility helpers used by other modules (e.g., player-animator)\n    // These map high-level effect names to our existing particle primitives\n    createSlashEffect(x, y, facing = 1) {\n        const count = 6\n        for (let i = 0; i < count; i++) {\n            const speed = 250 + Math.random() * 150\n            const spreadY = (Math.random() - 0.5) * 0.4\n            this.addParticle(new Particle(x, y + (Math.random() - 0.5) * 20, {\n                vx: facing * speed + (Math.random() - 0.5) * 60,\n                vy: spreadY * speed * 0.2,\n                color: { r: 255, g: 230, b: 120 },\n                size: 2 + Math.random() * 2,\n                life: 0.25 + Math.random() * 0.2,\n                alphaDecay: 0.92,\n                sizeDecay: 0.96,\n                glow: true,\n                glowSize: 3,\n                shape: 'star',\n                blendMode: 'screen',\n                trail: true\n            }))\n        }\n        // Central flash\n        this.addParticle(new Particle(x + facing * 10, y, {\n            color: { r: 255, g: 255, b: 200 },\n            size: 24,\n            life: 0.12,\n            alpha: 0.8,\n            alphaDecay: 0.85,\n            sizeDecay: 1.18,\n            glow: true,\n            glowSize: 2,\n            blendMode: 'screen'\n        }))\n    }\n\n    createShieldEffect(x, y) {\n        const ring = 12\n        for (let i = 0; i < ring; i++) {\n            const angle = (Math.PI * 2 * i) / ring\n            const speed = 120 + Math.random() * 80\n            this.addParticle(new Particle(x, y, {\n                vx: Math.cos(angle) * speed,\n                vy: Math.sin(angle) * speed,\n                color: { r: 120, g: 180, b: 255 },\n                size: 2,\n                life: 0.25,\n                alphaDecay: 0.92,\n                sizeDecay: 0.98,\n                glow: true,\n                glowSize: 3,\n                shape: 'circle',\n                blendMode: 'screen'\n            }))\n        }\n        // Soft protective flash\n        this.addParticle(new Particle(x, y, {\n            color: { r: 180, g: 220, b: 255 },\n            size: 30,\n            life: 0.18,\n            alpha: 0.5,\n            alphaDecay: 0.9,\n            sizeDecay: 1.12,\n            glow: true,\n            glowSize: 2,\n            blendMode: 'screen'\n        }))\n    }\n\n    createBlockImpact(x, y) {\n        this.createBlockSpark(x, y, 0)\n    }\n\n    createBloodEffect(x, y) {\n        this.createBloodSplatter(x, y)\n    }\n\n    createDeathEffect(x, y) {\n        this.createEnemyDeathExplosion(x, y)\n    }\n\n    createRespawnEffect(x, y) {\n        this.createDustCloud(x, y, 40)\n        this.addParticle(new Particle(x, y, {\n            color: { r: 180, g: 255, b: 255 },\n            size: 60,\n            life: 0.4,\n            alpha: 0.6,\n            alphaDecay: 0.9,\n            sizeDecay: 1.1,\n            glow: true,\n            glowSize: 2,\n            blendMode: 'screen'\n        }))\n    }\n\n    startChargingEffect(x, y) {\n        const emitter = new ParticleEmitter(x, y, {\n            emissionRate: 20,\n            lifetime: 1.5,\n            particleConfig: {\n                color: { r: 120, g: 200, b: 255 },\n                size: 3,\n                life: 0.4,\n                alpha: 0.7,\n                alphaDecay: 0.94,\n                sizeDecay: 0.98,\n                glow: true,\n                glowSize: 2,\n                shape: 'circle',\n                speed: 30,\n                rotationSpeed: 3\n            },\n            spread: Math.PI * 2,\n            direction: 0\n        })\n        this.addEmitter(emitter)\n        return emitter\n    }\n\n    createChargedSlash(x, y, facing = 1, chargePercent = 0) {\n        this.createSlashEffect(x, y, facing)\n        const extra = Math.floor(6 * Math.max(0, Math.min(1, chargePercent)))\n        for (let i = 0; i < extra; i++) {\n            this.addParticle(new Particle(x, y + (Math.random() - 0.5) * 20, {\n                vx: facing * (300 + Math.random() * 200),\n                vy: (Math.random() - 0.5) * 40,\n                color: { r: 255, g: 255, b: 180 },\n                size: 3 + Math.random() * 2,\n                life: 0.3,\n                alphaDecay: 0.9,\n                sizeDecay: 0.95,\n                glow: true,\n                glowSize: 3,\n                shape: 'star',\n                blendMode: 'screen',\n                trail: true\n            }))\n        }\n        // Bigger flash based on charge\n        this.addParticle(new Particle(x + facing * 15, y, {\n            color: { r: 255, g: 255, b: 220 },\n            size: 30 + chargePercent * 20,\n            life: 0.14 + chargePercent * 0.1,\n            alpha: 0.85,\n            alphaDecay: 0.88,\n            sizeDecay: 1.2,\n            glow: true,\n            glowSize: 2,\n            blendMode: 'screen'\n        }))\n    }\n\n    createDashTrail(x, y, dirX = 1, dirY = 0) {\n        const len = Math.sqrt(dirX * dirX + dirY * dirY) || 1\n        const nx = dirX / len\n        const ny = dirY / len\n        for (let i = 0; i < 4; i++) {\n            this.addParticle(new Particle(\n                x - nx * (10 + i * 3),\n                y - ny * (10 + i * 3),\n                {\n                    vx: -nx * 80 + (Math.random() - 0.5) * 20,\n                    vy: -ny * 80 + (Math.random() - 0.5) * 20,\n                    color: { r: 200, g: 220, b: 255 },\n                    size: 3,\n                    life: 0.25,\n                    alpha: 0.5,\n                    alphaDecay: 0.9,\n                    sizeDecay: 0.98,\n                    glow: true,\n                    glowSize: 2,\n                    blendMode: 'screen'\n                }\n            ))\n        }\n    }\n\n    createLandingImpact(x, y, strength = 1) {\n        const radius = 30 + 40 * Math.max(0, Math.min(1, strength))\n        this.createDustCloud(x, y, radius)\n        // Quick flash at feet\n        this.addParticle(new Particle(x, y, {\n            color: { r: 255, g: 255, b: 255 },\n            size: 20 * strength,\n            life: 0.12,\n            alpha: 0.6,\n            alphaDecay: 0.88,\n            sizeDecay: 1.2,\n            glow: true,\n            glowSize: 2,\n            blendMode: 'screen'\n        }))\n    }\n\n    createSparkle(x, y) {\n        this.addParticle(new Particle(x, y, {\n            color: { r: 255, g: 255, b: 200 },\n            size: 3 + Math.random() * 2,\n            life: 0.3,\n            alpha: 0.9,\n            alphaDecay: 0.92,\n            sizeDecay: 0.97,\n            glow: true,\n            glowSize: 3,\n            shape: 'star',\n            blendMode: 'screen'\n        }))\n    }\n}\n\nexport class ParticleEmitter {\n    constructor(x, y, config = {}) {\n        this.x = x\n        this.y = y\n        this.active = true\n        this.emissionRate = config.emissionRate || 10 // particles per second\n        this.emissionTimer = 0\n        this.lifetime = config.lifetime || Infinity\n        this.age = 0\n        this.particleConfig = config.particleConfig || {}\n        this.spread = config.spread || Math.PI * 2\n        this.direction = config.direction || 0\n        this.system = null\n    }\n\n    update(deltaTime) {\n        this.age += deltaTime\n        if (this.age >= this.lifetime) {\n            this.active = false\n            return\n        }\n\n        this.emissionTimer += deltaTime\n        const emissionInterval = 1 / this.emissionRate\n        \n        while (this.emissionTimer >= emissionInterval && this.active) {\n            this.emissionTimer -= emissionInterval\n            this.emit()\n        }\n    }\n\n    emit() {\n        if (!this.system) {return}\n        \n        const angle = this.direction + (Math.random() - 0.5) * this.spread\n        const config = { ...this.particleConfig }\n        \n        if (config.speed) {\n            config.vx = Math.cos(angle) * config.speed\n            config.vy = Math.sin(angle) * config.speed\n            delete config.speed\n        }\n        \n        this.system.addParticle(new Particle(this.x, this.y, config))\n    }\n\n    setPosition(x, y) {\n        this.x = x\n        this.y = y\n    }\n\n    stop() {\n        this.active = false\n    }\n}\n\nexport default ParticleSystem","// Enhanced Wolf Animation System\n// Provides advanced animations, procedural movements, and visual effects for wolves\n\n// Animation and AnimationFrame imported but not directly used - may be used indirectly\nimport { ParticleSystem } from '../utils/particle-system.js'\n\nexport class WolfAnimationSystem {\n    constructor() {\n        // Animation definitions for different wolf states\n        this.animations = new Map()\n        this.proceduralAnimations = new Map()\n        this.particleEffects = new Map()\n        this._dt = 0\n        this.wasmModule = null // To hold the WASM module instance\n        \n        this.initializeAnimations()\n        this.initializeProceduralAnimations()\n        this.initializeParticleEffects()\n    }\n    \n    setWasmModule(wasmModule) {\n        this.wasmModule = wasmModule\n    }\n    \n    // --- Helpers: seeded RNG, smoothing, math ---\n    _seedWolf(wolf) {\n        if (wolf._animSeed == null) {\n            // Derive a stable-ish seed from existing visual-only properties\n            const fx = Math.floor((wolf.position?.x || 0) * 1000) & 0xffff\n            const fy = Math.floor((wolf.position?.y || 0) * 1000) & 0xffff\n            const fp = Math.floor(((wolf.furPattern || 0.5) * 1e6)) & 0xffff\n            wolf._animSeed = ((fx << 16) ^ fy ^ (fp << 1)) >>> 0\n        }\n        if (wolf._animRngState == null) { wolf._animRngState = wolf._animSeed >>> 0 }\n    }\n    _rand(wolf) {\n        // xorshift32\n        this._seedWolf(wolf)\n        let x = wolf._animRngState | 0\n        x ^= x << 13; x ^= x >>> 17; x ^= x << 5\n        wolf._animRngState = x >>> 0\n        return (wolf._animRngState & 0xffffffff) / 0x100000000\n    }\n    _chance(wolf, p) { return this._rand(wolf) < p }\n    _lerp(a, b, t) { return a + (b - a) * t }\n    _smoothNumber(current, target, rate) {\n        const dt = this._dt || 0.016\n        const t = Math.min(1, Math.max(0, rate * dt))\n        return this._lerp(current, target, t)\n    }\n    _smoothProp(wolf, key, target, rate = 8) {\n        const cur = wolf[key] != null ? wolf[key] : target\n        wolf[key] = this._smoothNumber(cur, target, rate)\n    }\n    _updateSmoothedVelocity(wolf) {\n        const vx = wolf.velocity?.x || 0\n        const vy = wolf.velocity?.y || 0\n        wolf._smVelX = this._smoothNumber(wolf._smVelX || 0, vx, 10)\n        wolf._smVelY = this._smoothNumber(wolf._smVelY || 0, vy, 10)\n    }\n    \n    initializeAnimations() {\n        // Idle animation - subtle breathing and ear twitches\n        this.animations.set('idle', {\n            breathing: {\n                amplitude: 2,\n                frequency: 0.002,\n                offset: 0\n            },\n            earTwitch: {\n                probability: 0.001,\n                duration: 300,\n                maxRotation: 0.2\n            },\n            tailSway: {\n                amplitude: 0.1,\n                frequency: 0.003\n            },\n            blinking: {\n                probability: 0.002,\n                duration: 150\n            }\n        })\n        \n        // Walking animation\n        this.animations.set('walking', {\n            legCycle: {\n                frequency: 0.008,\n                amplitude: 8,\n                phaseOffset: Math.PI\n            },\n            bodyBob: {\n                amplitude: 2,\n                frequency: 0.016\n            },\n            headBob: {\n                amplitude: 1.5,\n                frequency: 0.008\n            },\n            tailSway: {\n                amplitude: 0.2,\n                frequency: 0.008\n            }\n        })\n        \n        // Running animation\n        this.animations.set('running', {\n            legCycle: {\n                frequency: 0.015,\n                amplitude: 12,\n                phaseOffset: Math.PI,\n                stretchFactor: 1.2\n            },\n            bodyBob: {\n                amplitude: 4,\n                frequency: 0.03\n            },\n            headBob: {\n                amplitude: 3,\n                frequency: 0.015\n            },\n            tailStream: {\n                amplitude: 0.4,\n                frequency: 0.02,\n                streamEffect: true\n            },\n            earsPinned: true\n        })\n        \n        // Prowling animation (stalking)\n        this.animations.set('prowling', {\n            legCycle: {\n                frequency: 0.004,\n                amplitude: 5,\n                phaseOffset: Math.PI,\n                careful: true // Careful foot placement\n            },\n            bodyLowered: {\n                lowerAmount: 10,\n                sway: 1\n            },\n            headLowered: {\n                lowerAmount: 5,\n                scanning: true,\n                scanSpeed: 0.002\n            },\n            tailStill: {\n                tipTwitch: 0.01,\n                frequency: 0.005\n            },\n            earsForward: {\n                rotation: -0.3,\n                alertness: 1.0\n            }\n        })\n        \n        // Lunging animation\n        this.animations.set('lunging', {\n            bodyStretch: {\n                stretchFactor: 1.3,\n                compressionStart: 0.8, // Compress before launch\n                extensionPeak: 1.5\n            },\n            legsExtended: {\n                frontExtension: 20,\n                rearExtension: 15,\n                clawsOut: true\n            },\n            mouthOpen: {\n                openAmount: 0.8,\n                teethVisible: true\n            },\n            earsBack: {\n                rotation: 0.5\n            },\n            furRipple: {\n                intensity: 0.3,\n                speed: 0.02\n            }\n        })\n        \n        // Attacking animation\n        this.animations.set('attacking', {\n            biteSequence: [\n                { jaw: 0, duration: 100 },\n                { jaw: 0.9, duration: 50 },\n                { jaw: 0.7, duration: 100 },\n                { jaw: 0, duration: 150 }\n            ],\n            headShake: {\n                amplitude: 5,\n                frequency: 0.05\n            },\n            clawSwipe: {\n                swipeSpeed: 0.03,\n                swipeArc: Math.PI / 3\n            },\n            bodyTense: {\n                tensionLevel: 0.8\n            }\n        })\n        \n        // Howling animation\n        this.animations.set('howling', {\n            headTilt: {\n                startAngle: 0,\n                endAngle: -Math.PI / 4,\n                duration: 1000\n            },\n            mouthOpen: {\n                openAmount: 0.6,\n                vibration: 0.02\n            },\n            chestExpansion: {\n                expansionAmount: 1.2,\n                frequency: 0.003\n            },\n            tailRaised: {\n                angle: 0.3\n            },\n            soundWaves: {\n                frequency: 0.01,\n                amplitude: 2,\n                visible: true\n            }\n        })\n        \n        // Hurt animation\n        this.animations.set('hurt', {\n            flinch: {\n                intensity: 10,\n                duration: 200,\n                direction: 'away'\n            },\n            earsFlat: {\n                rotation: 0.6\n            },\n            tailTucked: {\n                tuckAmount: 0.8\n            },\n            whimper: {\n                mouthOpen: 0.2,\n                duration: 300\n            },\n            bodyShake: {\n                amplitude: 3,\n                frequency: 0.1,\n                dampening: 0.9\n            }\n        })\n        \n        // Death animation\n        this.animations.set('death', {\n            collapse: {\n                stages: [\n                    { legs: 'buckle', duration: 300 },\n                    { body: 'fall', duration: 400 },\n                    { final: 'limp', duration: 500 }\n                ]\n            },\n            fadeOut: {\n                startDelay: 1000,\n                duration: 2000\n            }\n        })\n    }\n    \n    initializeProceduralAnimations() {\n        // Procedural leg movement system\n        this.proceduralAnimations.set('legIK', {\n            calculateLegPosition: (wolf, legIndex, time) => {\n                const anim = this.animations.get(wolf.state)\n                if (!anim || !anim.legCycle) {return { x: 0, y: 0 }}\n                \n                const cycle = anim.legCycle\n                const phase = legIndex % 2 === 0 ? 0 : cycle.phaseOffset\n                const t = time * cycle.frequency + phase\n                \n                // Create realistic leg movement pattern\n                const x = Math.sin(t) * cycle.amplitude * 0.5\n                const y = Math.max(0, Math.sin(t * 2)) * cycle.amplitude\n                \n                // Add careful foot placement for prowling\n                if (cycle.careful) {\n                    return {\n                        x: x * 0.5,\n                        y: y * 0.7,\n                        placement: 'careful'\n                    }\n                }\n                \n                return { x, y }\n            }\n        })\n        \n        // Procedural tail physics\n        this.proceduralAnimations.set('tailPhysics', {\n            segments: 5,\n            calculateTailCurve: (wolf, time) => {\n                const anim = this.animations.get(wolf.state)\n                const segments = []\n                \n                for (let i = 0; i < 5; i++) {\n                    const delay = i * 0.1\n                    let angle = 0\n                    \n                    if (anim?.tailSway) {\n                        angle = Math.sin(time * anim.tailSway.frequency - delay) * \n                               anim.tailSway.amplitude * (1 - i * 0.15)\n                    } else if (anim?.tailStream) {\n                        // Streaming effect for running\n                        angle = Math.sin(time * anim.tailStream.frequency - delay) * \n                               anim.tailStream.amplitude * (1 + i * 0.1)\n                    } else if (anim?.tailTucked) {\n                        angle = anim.tailTucked.tuckAmount * (1 + i * 0.2)\n                    }\n                    \n                    segments.push({\n                        angle,\n                        length: 8 - i * 0.5\n                    })\n                }\n                \n                return segments\n            }\n        })\n        \n        // Procedural fur animation\n        this.proceduralAnimations.set('furDynamics', {\n            calculateFurMovement: (wolf, time, windStrength = 0) => {\n                const speed = Math.sqrt(wolf.velocity.x ** 2 + wolf.velocity.y ** 2)\n                const windEffect = Math.sin(time * 0.005) * windStrength\n                \n                return {\n                    ripple: speed > 200 ? Math.sin(time * 0.02) * 0.2 : 0,\n                    flow: windEffect + (speed / 1000),\n                    ruffled: wolf.state === 'hurt' || wolf.state === 'attacking'\n                }\n            }\n        })\n        \n        // Procedural breathing\n        this.proceduralAnimations.set('breathing', {\n            calculateBreathing: (wolf, time) => {\n                const baseRate = 0.002\n                const stateMultiplier = {\n                    idle: 1,\n                    walking: 1.2,\n                    running: 2,\n                    prowling: 0.8,\n                    attacking: 1.5,\n                    hurt: 1.8,\n                    howling: 1.3\n                }\n                \n                const rate = baseRate * (stateMultiplier[wolf.state] || 1)\n                const depth = wolf.state === 'running' ? 4 : 2\n                \n                return {\n                    chestExpansion: Math.sin(time * rate) * depth,\n                    bellyExpansion: Math.sin(time * rate - 0.2) * depth * 0.7\n                }\n            }\n        })\n    }\n    \n    initializeParticleEffects() {\n        // Dust particles for running\n        this.particleEffects.set('runDust', {\n            emitRate: 5,\n            particleLife: 500,\n            particleSpeed: { min: 20, max: 50 },\n            particleSize: { min: 2, max: 5 },\n            particleColor: 'rgba(139, 115, 85, 0.4)',\n            emitAngle: { min: Math.PI * 0.4, max: Math.PI * 0.6 },\n            gravity: 50\n        })\n        \n        // Blood particles for attacks\n        this.particleEffects.set('bloodSplatter', {\n            emitRate: 20,\n            particleLife: 800,\n            particleSpeed: { min: 100, max: 200 },\n            particleSize: { min: 1, max: 3 },\n            particleColor: 'rgba(139, 0, 0, 0.7)',\n            emitAngle: { min: 0, max: Math.PI * 2 },\n            gravity: 200\n        })\n        \n        // Saliva/foam for attacking\n        this.particleEffects.set('attackFoam', {\n            emitRate: 8,\n            particleLife: 300,\n            particleSpeed: { min: 50, max: 100 },\n            particleSize: { min: 1, max: 2 },\n            particleColor: 'rgba(255, 255, 255, 0.6)',\n            emitAngle: { min: -Math.PI / 6, max: Math.PI / 6 },\n            gravity: 100\n        })\n        \n        // Sound waves for howling\n        this.particleEffects.set('soundWaves', {\n            emitRate: 2,\n            particleLife: 1500,\n            particleSpeed: { min: 100, max: 100 },\n            particleSize: { min: 20, max: 40 },\n            particleColor: 'rgba(255, 255, 255, 0.2)',\n            emitAngle: { min: -Math.PI / 8, max: Math.PI / 8 },\n            gravity: 0,\n            expanding: true\n        })\n    }\n    \n    // Apply animation to wolf\n    applyAnimation(wolf, deltaTime) {\n        if (!this.wasmModule) { return } // Ensure WASM module is loaded\n        this._dt = deltaTime\n\n        // Find the index of this wolf in the WASM enemies array\n        // This assumes a direct mapping from the JS wolf object to the WASM enemy array index\n        // In a more complex scenario, you might need a lookup table or pass the index from WASM\n        const wolfIndex = wolf.id; // Assuming wolf.id corresponds to WASM enemy array index\n        if (!this.wasmModule.get_wolf_anim_active(wolfIndex)) { return } // Only animate active wolves\n\n        const time = (typeof globalThis.wasmExports?.get_time_seconds === 'function') \n            ? globalThis.wasmExports.get_time_seconds() \n            : performance.now() / 1000;\n        const state = wolf.state;\n        const animation = this.animations.get(state);\n        \n        if (!animation) {return}\n        \n        // Track state transitions for gentle blend-in\n        if (wolf._lastAnimState !== state) {\n            wolf._lastAnimState = state\n            wolf._stateBlend = 0\n        }\n        wolf._stateBlend = Math.min(1, (wolf._stateBlend || 0) + deltaTime * 6)\n        \n        // Smooth velocity for secondary motion\n        this._updateSmoothedVelocity(wolf)\n        \n        // Apply procedural animations (now fetching from WASM)\n        this.applyProceduralAnimations(wolf, wolfIndex, time)\n        \n        // Apply state-specific animations\n        switch (state) {\n            case 'idle':\n                this.applyIdleAnimation(wolf, animation, time)\n                break\n            case 'walking':\n            case 'running':\n                this.applyLocomotionAnimation(wolf, animation, time)\n                break\n            case 'prowling':\n                this.applyProwlingAnimation(wolf, animation, time)\n                break\n            case 'lunging':\n                this.applyLungingAnimation(wolf, animation, time)\n                break\n            case 'attacking':\n                this.applyAttackingAnimation(wolf, animation, time)\n                break\n            case 'howling':\n                this.applyHowlingAnimation(wolf, animation, time)\n                break\n            case 'hurt':\n                this.applyHurtAnimation(wolf, animation, time)\n                break\n        }\n        \n        // Update particle effects\n        this.updateParticleEffects(wolf, deltaTime)\n    }\n    \n    applyProceduralAnimations(wolf, wolfIndex, time) {\n        if (!this.wasmModule) { return }\n\n        // Get procedural animation data from WASM\n        const anim_data = {\n            active: this.wasmModule.get_wolf_anim_active(wolfIndex),\n            leg_x: [\n                this.wasmModule.get_wolf_anim_leg_x(wolfIndex, 0),\n                this.wasmModule.get_wolf_anim_leg_x(wolfIndex, 1),\n                this.wasmModule.get_wolf_anim_leg_x(wolfIndex, 2),\n                this.wasmModule.get_wolf_anim_leg_x(wolfIndex, 3)\n            ],\n            leg_y: [\n                this.wasmModule.get_wolf_anim_leg_y(wolfIndex, 0),\n                this.wasmModule.get_wolf_anim_leg_y(wolfIndex, 1),\n                this.wasmModule.get_wolf_anim_leg_y(wolfIndex, 2),\n                this.wasmModule.get_wolf_anim_leg_y(wolfIndex, 3)\n            ],\n            spine_bend: this.wasmModule.get_wolf_anim_spine_bend(wolfIndex),\n            tail_angle: this.wasmModule.get_wolf_anim_tail_angle(wolfIndex),\n            head_pitch: this.wasmModule.get_wolf_anim_head_pitch(wolfIndex),\n            head_yaw: this.wasmModule.get_wolf_anim_head_yaw(wolfIndex),\n            ear_rotation: [\n                this.wasmModule.get_wolf_anim_ear_rotation(wolfIndex, 0),\n                this.wasmModule.get_wolf_anim_ear_rotation(wolfIndex, 1)\n            ],\n            body_stretch: this.wasmModule.get_wolf_anim_body_stretch(wolfIndex),\n            body_offset_y: this.wasmModule.get_wolf_anim_body_offset_y(wolfIndex),\n            fur_ruffle: this.wasmModule.get_wolf_anim_fur_ruffle(wolfIndex),\n        };\n\n        // Update wolf object with WASM data\n        wolf.legPositions = anim_data.leg_x.map((x, i) => ({ x, y: anim_data.leg_y[i] }));\n        wolf.spineBend = anim_data.spine_bend;\n        wolf.tailPosition = anim_data.tail_angle; // Using existing property for now\n        wolf.headPitch = anim_data.head_pitch;\n        wolf.headYaw = anim_data.head_yaw;\n        wolf.earRotation = anim_data.ear_rotation[0]; // Using one ear rotation for simplicity\n        wolf.bodyStretch = anim_data.body_stretch;\n        wolf.bodyBob = anim_data.body_offset_y; // Using existing property for now\n        wolf.furMovement = { ripple: anim_data.fur_ruffle, flow: 0, ruffled: anim_data.fur_ruffle > 0.05 }; // Map to existing furMovement structure\n\n        // The old procedural animations are now driven by WASM, so these can be removed/modified\n        // Apply breathing (still JS-driven for now)\n        const breathing = this.proceduralAnimations.get('breathing');\n        const breath = breathing.calculateBreathing(wolf, time);\n        wolf.breathingOffset = breath.chestExpansion;\n        wolf.bellyOffset = breath.bellyExpansion;\n    }\n    \n    applyIdleAnimation(wolf, animation, time) {\n        // Ear twitching (can be driven by WASM ear_rotation)\n        this._smoothProp(wolf, 'earRotation', wolf.earRotation || 0, 8); // Use WASM data\n        \n        // Blinking\n        if (this._chance(wolf, animation.blinking.probability)) {\n            wolf.blinkTime = time\n            wolf.blinkDuration = animation.blinking.duration\n        }\n        \n        wolf.isBlinking = wolf.blinkTime && time - wolf.blinkTime < wolf.blinkDuration\n    }\n    \n    applyLocomotionAnimation(wolf, animation, time) {\n        // Leg animation is now driven by WASM `wolf.legPositions`\n        // Body bobbing (can be driven by WASM body_offset_y)\n        this._smoothProp(wolf, 'bodyBob', wolf.bodyBob || 0, 10); // Use WASM data\n        this._smoothProp(wolf, 'headBob', wolf.headBob || 0, 10); // Placeholder, WASM head_pitch/yaw will be more direct\n        \n        // Ears pinned back when running fast (can be driven by WASM ear_rotation)\n        if (animation.earsPinned) {\n            this._smoothProp(wolf, 'earRotation', wolf.earRotation || 0.4, 12); // Use WASM data\n        }\n    }\n    \n    applyProwlingAnimation(wolf, animation, time) {\n        // Lower body position (can be driven by WASM body_offset_y)\n        this._smoothProp(wolf, 'bodyLowered', (wolf.bodyBob || 0) * 1000, 10); // Map bodyBob to bodyLowered\n        this._smoothProp(wolf, 'bodySway', Math.sin(time * 0.002) * 1, 10); // Retain JS sway for now\n        \n        // Head scanning movement (can be driven by WASM head_yaw)\n        if (animation.headLowered.scanning) {\n            wolf.headScan = wolf.headYaw; // Use WASM data\n        }\n        \n        // Alert ears (can be driven by WASM ear_rotation)\n        this._smoothProp(wolf, 'earRotation', wolf.earRotation || 0, 10); // Use WASM data\n        this._smoothProp(wolf, 'earAlertness', wolf.earRotation ? 1 : 0, 10); // Map earRotation to alertness\n        \n        // Careful leg placement is now driven by WASM `wolf.legPositions`\n    }\n    \n    applyLungingAnimation(wolf, animation, time) {\n        // Body stretch effect is now driven by WASM `wolf.bodyStretch`\n        this._smoothProp(wolf, 'bodyStretch', wolf.bodyStretch || 1, 14); // Use WASM data\n        \n        // Legs extended\n        wolf.frontLegExtension = (wolf.bodyStretch - 1) * 20; // Derive from WASM stretch\n        wolf.rearLegExtension = (wolf.bodyStretch - 1) * 15; // Derive from WASM stretch\n        wolf.clawsOut = wolf.bodyStretch > 1.1; // Derive from WASM stretch\n        \n        // Mouth open with teeth\n        wolf.mouthOpen = animation.mouthOpen.openAmount; // Still JS-driven\n        wolf.teethVisible = animation.mouthOpen.teethVisible; // Still JS-driven\n        \n        // Fur ripple effect (now driven by WASM fur_ruffle)\n        wolf.furRipple = wolf.furMovement?.ripple || 0;\n    }\n    \n    applyAttackingAnimation(wolf, animation, time) {\n        // Bite sequence (still JS-driven for now)\n        if (!wolf.biteSequenceIndex) {wolf.biteSequenceIndex = 0}\n        if (!wolf.biteSequenceTime) {wolf.biteSequenceTime = time}\n        \n        const currentBite = animation.biteSequence[wolf.biteSequenceIndex]\n        const elapsed = time - wolf.biteSequenceTime\n        \n        if (elapsed < currentBite.duration) {\n            wolf.jawOpen = currentBite.jaw\n        } else {\n            wolf.biteSequenceIndex = (wolf.biteSequenceIndex + 1) % animation.biteSequence.length\n            wolf.biteSequenceTime = time\n        }\n        \n        // Head shake (can be driven by WASM head_yaw/pitch or new shake param)\n        this._smoothProp(wolf, 'headShake', Math.sin(time * animation.headShake.frequency) * animation.headShake.amplitude, 18);\n        \n        // Body tension (can be driven by WASM body_stretch/fur_ruffle)\n        wolf.bodyTension = animation.bodyTense.tensionLevel;\n    }\n    \n    applyHowlingAnimation(wolf, animation, time) {\n        if (!wolf.howlStartTime) {wolf.howlStartTime = time}\n        \n        const howlProgress = Math.min((time - wolf.howlStartTime) / animation.headTilt.duration, 1)\n        \n        // Head tilting back (can be driven by WASM head_pitch)\n        wolf.headTilt = wolf.headPitch; // Use WASM data\n        \n        // Mouth vibration (still JS-driven)\n        wolf.mouthOpen = animation.mouthOpen.openAmount\n        wolf.mouthVibration = Math.sin(time * 0.05) * animation.mouthOpen.vibration\n        \n        // Chest expansion for breath (still JS-driven for now)\n        this._smoothProp(wolf, 'chestExpansion', 1 + Math.sin(time * animation.chestExpansion.frequency) * \n                             (animation.chestExpansion.expansionAmount - 1), 10);\n        \n        // Sound wave effect (still JS-driven)\n        if (animation.soundWaves.visible) {\n            wolf.soundWavePhase = time * animation.soundWaves.frequency\n            wolf.soundWaveAmplitude = animation.soundWaves.amplitude\n        }\n    }\n    \n    applyHurtAnimation(wolf, animation, time) {\n        if (!wolf.hurtStartTime) {wolf.hurtStartTime = time}\n        \n        const hurtElapsed = time - wolf.hurtStartTime\n        \n        // Flinch effect (still JS-driven)\n        if (hurtElapsed < animation.flinch.duration) {\n            const flinchProgress = hurtElapsed / animation.flinch.duration\n            wolf.flinchOffset = animation.flinch.intensity * (1 - flinchProgress)\n        }\n        \n        // Body shake with dampening (still JS-driven)\n        const shakeFactor = animation.bodyShake.dampening**(hurtElapsed / 100)\n        this._smoothProp(wolf, 'bodyShake', Math.sin(time * animation.bodyShake.frequency) * \n                        animation.bodyShake.amplitude * shakeFactor, 18);\n        \n        // Ears and tail position (can be driven by WASM ear_rotation/tail_angle)\n        this._smoothProp(wolf, 'earRotation', wolf.earRotation || animation.earsFlat.rotation, 14); // Use WASM data\n        this._smoothProp(wolf, 'tailTucked', wolf.tailPosition || animation.tailTucked.tuckAmount, 14); // Use WASM data\n    }\n    \n    updateParticleEffects(wolf, deltaTime) {\n        if (!wolf.particleSystem) {\n            wolf.particleSystem = new ParticleSystem()\n        }\n        \n        // Emit dust when running\n        if (wolf.state === 'running' && wolf.isGrounded) {\n            const dustEffect = this.particleEffects.get('runDust')\n            const ex = wolf.position.x - wolf.facing * 20\n            const ey = wolf.position.y + wolf.height / 2\n            if (typeof wolf.particleSystem.emit === 'function') {\n                wolf.particleSystem.emit(ex, ey, dustEffect)\n            } else if (typeof wolf.particleSystem.createDustCloud === 'function') {\n                wolf.particleSystem.createDustCloud(ex, ey, 20)\n            }\n        }\n        \n        // Emit sound waves when howling\n        if (wolf.state === 'howling') {\n            const soundEffect = this.particleEffects.get('soundWaves')\n            const ex = wolf.position.x + wolf.facing * 30\n            const ey = wolf.position.y - wolf.height / 4\n            if (typeof wolf.particleSystem.emit === 'function') {\n                wolf.particleSystem.emit(ex, ey, soundEffect)\n            } else if (typeof wolf.particleSystem.createSparkle === 'function') {\n                wolf.particleSystem.createSparkle(ex, ey)\n            }\n        }\n        \n        // Update all particles\n        wolf.particleSystem.update(deltaTime)\n    }\n    \n    // Enhanced rendering with all animation effects\n    renderAnimatedWolf(ctx, wolf, camera) {\n        ctx.save()\n        \n        // Calculate screen position\n        const screenX = wolf.position.x - camera.x\n        const screenY = wolf.position.y - camera.y\n        \n        // Apply transformations\n        ctx.translate(screenX, screenY)\n        \n        // Secondary motion from smoothed velocity\n        const svx = wolf._smVelX || 0\n        const svy = wolf._smVelY || 0\n        const speed = Math.sqrt(svx * svx + svy * svy)\n        const leanAngle = wolf.spineBend || 0; // Use WASM spine_bend\n        if (leanAngle) { ctx.rotate(leanAngle) }\n        \n        // Apply body stretch for lunging\n        const runStretch = 1 + Math.min(speed / (wolf.maxSpeed || 350), 1) * 0.05\n        const stretchX = (wolf.bodyStretch || 1) * runStretch\n        const stretchY = 2 - stretchX // Inverse stretch to maintain volume\n        ctx.scale(wolf.size * wolf.facing * stretchX, wolf.size * stretchY)\n        \n        // Apply body shake for hurt animation\n        if (wolf.bodyShake) {\n            ctx.translate(wolf.bodyShake, 0)\n        }\n        \n        // Apply flinch offset\n        if (wolf.flinchOffset) {\n            ctx.translate(-wolf.facing * wolf.flinchOffset, -wolf.flinchOffset * 0.5)\n        }\n        \n        // Draw shadow with animation\n        this.drawAnimatedShadow(ctx, wolf)\n        \n        // Draw animated body parts\n        this.drawAnimatedTail(ctx, wolf)\n        this.drawAnimatedLegs(ctx, wolf, 'hind')\n        this.drawAnimatedBody(ctx, wolf)\n        this.drawAnimatedLegs(ctx, wolf, 'front')\n        this.drawAnimatedNeck(ctx, wolf)\n        this.drawAnimatedHead(ctx, wolf)\n        \n        // Draw particle effects\n        if (wolf.particleSystem) {\n            wolf.particleSystem.render(ctx, camera)\n        }\n        \n        // Draw UI elements\n        this.drawWolfUI(ctx, wolf)\n        \n        ctx.restore()\n    }\n    \n    drawAnimatedShadow(ctx, wolf) {\n        const speed = Math.sqrt((wolf._smVelX||0)**2 + (wolf._smVelY||0)**2)\n        const moveScale = 1 + Math.min(speed / (wolf.maxSpeed || 350), 1) * 0.15\n        const shadowScale = wolf.state === 'lunging' ? 1.2 * moveScale : moveScale\n        const shadowAlpha = wolf.isGrounded ? 0.32 : 0.12\n        \n        ctx.fillStyle = `rgba(0, 0, 0, ${shadowAlpha})`\n        ctx.beginPath()\n        ctx.ellipse(0, wolf.height / 2 + 5, wolf.width / 3 * shadowScale, 8, 0, 0, Math.PI * 2)\n        ctx.fill()\n    }\n    \n    drawAnimatedTail(ctx, wolf) {\n        ctx.save()\n        \n        // Base tail position\n        const baseTailX = -wolf.width * 0.35\n        let baseTailY = -wolf.height * 0.1\n        \n        // Adjust for body lowered (prowling)\n        if (wolf.bodyLowered) {\n            baseTailY += wolf.bodyLowered * 0.5\n        }\n        \n        ctx.translate(baseTailX, baseTailY)\n        \n        // Draw segmented tail with physics\n        if (wolf.tailSegments) {\n            let currentX = 0\n            let currentY = 0\n            let currentAngle = wolf.tailPosition || 0; // Use WASM tail_angle\n            \n            wolf.tailSegments.forEach((segment, i) => {\n                ctx.save()\n                ctx.translate(currentX, currentY)\n                ctx.rotate(currentAngle + segment.angle)\n                \n                // Tail segment\n                const segmentWidth = 8 - i * 1.2\n                const segmentLength = segment.length\n                \n                ctx.fillStyle = i % 2 === 0 ? wolf.colors.primary : wolf.colors.secondary\n                ctx.fillRect(0, -segmentWidth/2, segmentLength, segmentWidth)\n                \n                // Update position for next segment\n                currentX += Math.cos(currentAngle + segment.angle) * segmentLength\n                currentY += Math.sin(currentAngle + segment.angle) * segmentLength\n                currentAngle += segment.angle\n                \n                ctx.restore()\n            })\n        } else {\n            // Fallback simple tail\n            ctx.rotate(wolf.tailPosition || 0)\n            ctx.fillStyle = wolf.colors.primary\n            ctx.beginPath()\n            ctx.moveTo(0, 0)\n            ctx.quadraticCurveTo(-15, 5, -25, 15)\n            ctx.quadraticCurveTo(-20, 20, -10, 18)\n            ctx.quadraticCurveTo(-5, 10, 0, 0)\n            ctx.fill()\n        }\n        \n        ctx.restore()\n    }\n    \n    drawAnimatedLegs(ctx, wolf, type) {\n        const legPositions = wolf.legPositions || [] // Now populated from WASM\n        const isHind = type === 'hind'\n        const startIndex = isHind ? 0 : 2\n        \n        for (let i = startIndex; i < startIndex + 2; i++) {\n            const legPos = legPositions[i] || { x: 0, y: 0 }\n            const baseX = isHind ? \n                -wolf.width * (0.25 - (i % 2) * 0.1) : \n                wolf.width * (0.15 + (i % 2) * 0.1)\n            const baseY = wolf.height * 0.2\n            \n            ctx.save()\n            ctx.translate(baseX + legPos.x * 100, baseY + legPos.y * 100) // Scale WASM values\n            \n            // Upper leg\n            ctx.fillStyle = wolf.colors.primary\n            ctx.fillRect(0, 0, 10, 15 - legPos.y * 50) // Adjust size based on WASM y-pos\n            \n            // Lower leg\n            ctx.translate(0, 15 - legPos.y * 50)\n            ctx.rotate(legPos.y * 0.05) // Slight rotation based on movement\n            ctx.fillRect(0, 0, 8, 10 + legPos.y * 50)\n            \n            // Paw\n            ctx.translate(0, 10 + legPos.y * 50)\n            ctx.fillStyle = wolf.colors.secondary\n            ctx.fillRect(-1, 0, 10, 5)\n            \n            // Claws (visible when attacking or lunging)\n            if (wolf.clawsOut) {\n                ctx.fillStyle = wolf.colors.claws\n                for (let j = 0; j < 3; j++) {\n                    ctx.fillRect(j * 3, 4, 2, 4)\n                }\n            }\n            \n            ctx.restore()\n        }\n    }\n    \n    drawAnimatedBody(ctx, wolf) {\n        ctx.save()\n        \n        // Apply body lowered for prowling (now driven by WASM bodyBob)\n        if (wolf.bodyBob) {\n            ctx.translate(0, wolf.bodyBob * 100); // Scale WASM body_offset_y\n        }\n        \n        // Apply body bob for movement (now directly from WASM bodyBob)\n        // No longer need separate wolf.bodyLowered, consolidate to wolf.bodyBob\n        \n        // Main body with breathing\n        const breathY = wolf.breathingOffset || 0\n        const chestExpansion = wolf.chestExpansion || 1\n        \n        ctx.fillStyle = wolf.colors.primary\n        ctx.beginPath()\n        ctx.ellipse(0, breathY, wolf.width * 0.35 * chestExpansion * (wolf.bodyStretch || 1), wolf.height * 0.25, 0, 0, Math.PI * 2)\n        ctx.fill()\n        \n        // Belly with separate breathing\n        const bellyY = breathY + (wolf.bellyOffset || 0)\n        ctx.fillStyle = wolf.colors.belly\n        ctx.beginPath()\n        ctx.ellipse(0, bellyY + wolf.height * 0.1, wolf.width * 0.3 * (wolf.bodyStretch || 1), wolf.height * 0.15, 0, 0, Math.PI)\n        ctx.fill()\n        \n        // Animated fur texture\n        if (wolf.furMovement) {\n            this.drawAnimatedFur(ctx, wolf, 0, breathY, wolf.width * 0.35, wolf.height * 0.25)\n        }\n        \n        ctx.restore()\n    }\n    \n    drawAnimatedNeck(ctx, wolf) {\n        ctx.save()\n        \n        // Apply head bob (now derived from WASM body_offset_y)\n        if (wolf.bodyBob) {\n            ctx.translate(0, wolf.bodyBob * 50) // Scale WASM body_offset_y\n        }\n        \n        ctx.fillStyle = wolf.colors.primary\n        ctx.beginPath()\n        ctx.moveTo(wolf.width * 0.15, -wolf.height * 0.1)\n        ctx.quadraticCurveTo(wolf.width * 0.25, -wolf.height * 0.05, wolf.width * 0.3, -wolf.height * 0.15)\n        ctx.quadraticCurveTo(wolf.width * 0.25, wolf.height * 0.05, wolf.width * 0.15, wolf.height * 0.1)\n        ctx.fill()\n        \n        ctx.restore()\n    }\n    \n    drawAnimatedHead(ctx, wolf) {\n        ctx.save()\n        ctx.translate(wolf.width * 0.35, -wolf.height * 0.15)\n        \n        // Apply head tilt for howling (now driven by WASM head_pitch)\n        if (wolf.headPitch) {\n            ctx.rotate(wolf.headPitch)\n        }\n        \n        // Apply head shake for attacking (still JS-driven for now)\n        if (wolf.headShake) {\n            ctx.translate(wolf.headShake, 0)\n        }\n        \n        // Apply head scan for prowling (now driven by WASM head_yaw)\n        if (wolf.headYaw) {\n            ctx.rotate(wolf.headYaw)\n        }\n        \n        // Apply head bob (now derived from WASM body_offset_y)\n        if (wolf.bodyBob) {\n            ctx.translate(0, wolf.bodyBob * 50) // Scale WASM body_offset_y\n        }\n        \n        // Head shape\n        ctx.fillStyle = wolf.colors.primary\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.quadraticCurveTo(10, -5, 15, 0)\n        ctx.quadraticCurveTo(20, 3, 25, 5)\n        ctx.lineTo(28, 8)\n        ctx.quadraticCurveTo(25, 10, 20, 10)\n        ctx.quadraticCurveTo(10, 8, 0, 10)\n        ctx.quadraticCurveTo(-5, 5, 0, 0)\n        ctx.fill()\n        \n        // Animated ears\n        this.drawAnimatedEars(ctx, wolf)\n        \n        // Animated mouth\n        this.drawAnimatedMouth(ctx, wolf)\n        \n        // Animated eyes\n        this.drawAnimatedEyes(ctx, wolf)\n        \n        // Sound waves for howling\n        if (wolf.soundWavePhase !== null) {\n            this.drawSoundWaves(ctx, wolf)\n        }\n        \n        ctx.restore()\n    }\n    \n    drawAnimatedEars(ctx, wolf) {\n        const baseRotation = wolf.earRotation || 0 // Use WASM ear_rotation\n        const alertness = wolf.earAlertness || 0\n        \n        // Left ear\n        ctx.save()\n        ctx.translate(5, -3)\n        ctx.rotate(baseRotation - alertness * 0.1)\n        \n        ctx.fillStyle = wolf.colors.primary\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(-3, -8 - alertness * 2)\n        ctx.lineTo(3, -8 - alertness * 2)\n        ctx.closePath()\n        ctx.fill()\n        \n        // Inner ear\n        ctx.fillStyle = wolf.colors.belly\n        ctx.beginPath()\n        ctx.moveTo(0, -2)\n        ctx.lineTo(-1, -6 - alertness)\n        ctx.lineTo(1, -6 - alertness)\n        ctx.closePath()\n        ctx.fill()\n        ctx.restore()\n        \n        // Right ear\n        ctx.save()\n        ctx.translate(8, -2)\n        ctx.rotate(baseRotation + alertness * 0.1)\n        \n        ctx.fillStyle = wolf.colors.secondary\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(-2, -7 - alertness * 2)\n        ctx.lineTo(3, -7 - alertness * 2)\n        ctx.closePath()\n        ctx.fill()\n        ctx.restore()\n    }\n    \n    drawAnimatedMouth(ctx, wolf) {\n        const mouthOpen = wolf.mouthOpen || wolf.jawOpen || 0\n        const mouthVibration = wolf.mouthVibration || 0\n        \n        // Snout\n        ctx.fillStyle = wolf.colors.secondary\n        ctx.beginPath()\n        ctx.moveTo(20, 5)\n        ctx.quadraticCurveTo(25, 6, 28, 8)\n        ctx.quadraticCurveTo(25, 9 + mouthOpen * 3, 20, 9 + mouthOpen * 3)\n        ctx.fill()\n        \n        // Open mouth\n        if (mouthOpen > 0) {\n            // Jaw\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.7)'\n            ctx.beginPath()\n            ctx.moveTo(20, 9)\n            ctx.quadraticCurveTo(24, 9 + mouthOpen * 5 + mouthVibration, \n                                 28, 9 + mouthOpen * 3 + mouthVibration)\n            ctx.quadraticCurveTo(24, 11 + mouthOpen * 5 + mouthVibration, \n                                 20, 11 + mouthOpen * 5)\n            ctx.fill()\n            \n            // Teeth\n            if (wolf.teethVisible || mouthOpen > 0.5) {\n                ctx.fillStyle = '#ffffff'\n                \n                // Upper fangs\n                ctx.beginPath()\n                ctx.moveTo(22, 9)\n                ctx.lineTo(21, 11 + mouthOpen * 2)\n                ctx.lineTo(23, 11 + mouthOpen * 2)\n                ctx.closePath()\n                ctx.fill()\n                \n                ctx.beginPath()\n                ctx.moveTo(25, 9)\n                ctx.lineTo(24, 11 + mouthOpen * 2)\n                ctx.lineTo(26, 11 + mouthOpen * 2)\n                ctx.closePath()\n                ctx.fill()\n                \n                // Lower fangs\n                if (mouthOpen > 0.7) {\n                    ctx.beginPath()\n                    ctx.moveTo(23, 11 + mouthOpen * 4)\n                    ctx.lineTo(22, 9 + mouthOpen * 4)\n                    ctx.lineTo(24, 9 + mouthOpen * 4)\n                    ctx.closePath()\n                    ctx.fill()\n                }\n            }\n            \n            // Tongue\n            if (mouthOpen > 0.3 && wolf.state !== 'attacking') {\n                ctx.fillStyle = 'rgba(255, 100, 100, 0.8)'\n                ctx.beginPath()\n                ctx.ellipse(24, 10 + mouthOpen * 3, 3, 2 + mouthOpen * 2, 0.2, 0, Math.PI)\n                ctx.fill()\n            }\n        }\n        \n        // Nose\n        ctx.fillStyle = wolf.colors.nose\n        ctx.beginPath()\n        ctx.arc(28, 8, 2, 0, Math.PI * 2)\n        ctx.fill()\n    }\n    \n    drawAnimatedEyes(ctx, wolf) {\n        // Check if blinking\n        if (wolf.isBlinking) {\n            // Closed eye line\n            ctx.strokeStyle = wolf.colors.secondary\n            ctx.lineWidth = 2\n            ctx.beginPath()\n            ctx.moveTo(10, 3)\n            ctx.lineTo(16, 3)\n            ctx.stroke()\n            return\n        }\n        \n        // Eye glow effect\n        if (wolf.state === 'prowling' || wolf.state === 'lunging' || wolf.state === 'attacking') {\n            ctx.shadowColor = wolf.colors.eyes\n            ctx.shadowBlur = 8\n        }\n        \n        // Eye white\n        ctx.fillStyle = '#ffffff'\n        ctx.beginPath()\n        ctx.ellipse(12, 3, 4, 3, -0.2, 0, Math.PI * 2)\n        ctx.fill()\n        \n        // Iris with dynamic size\n        const pupilDilation = wolf.state === 'attacking' ? 0.7 : \n                             wolf.state === 'prowling' ? 0.5 : 0.3\n        ctx.fillStyle = wolf.colors.eyes\n        ctx.beginPath()\n        ctx.arc(13, 3, 2, 0, Math.PI * 2)\n        ctx.fill()\n        \n        // Pupil\n        ctx.fillStyle = '#000000'\n        ctx.beginPath()\n        ctx.arc(13.5, 3, 1 * (1 - pupilDilation), 0, Math.PI * 2)\n        ctx.fill()\n        \n        // Eye shine\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.7)'\n        ctx.beginPath()\n        ctx.arc(12, 2, 0.5, 0, Math.PI * 2)\n        ctx.fill()\n        \n        ctx.shadowBlur = 0\n    }\n    \n    drawAnimatedFur(ctx, wolf, x, y, width, height) {\n        ctx.strokeStyle = wolf.colors.secondary\n        ctx.lineWidth = 0.5\n        ctx.globalAlpha = 0.4\n        \n        const furLines = 12\n        const ripple = (wolf.furMovement?.ripple || 0) + wolf.furRuffle; // Use WASM fur_ruffle\n        const flow = wolf.furMovement?.flow || 0\n        const ruffled = wolf.furMovement?.ruffled || false\n        \n        for (let i = 0; i < furLines; i++) {\n            const angle = (i / furLines) * Math.PI * 2\n            const baseX = x + Math.cos(angle) * width * 0.7\n            const baseY = y + Math.sin(angle) * height * 0.7\n            \n            // Add movement to fur\n            const offsetX = Math.sin(wolf.animationTime * 0.01 + i) * ripple * 10\n            const offsetY = Math.cos(wolf.animationTime * 0.01 + i) * ripple * 5\n            \n            ctx.beginPath()\n            ctx.moveTo(baseX, baseY)\n            \n            if (ruffled) {\n                // Spiky fur when agitated\n                ctx.lineTo(baseX + Math.cos(angle) * 8 + offsetX, \n                          baseY + Math.sin(angle) * 8 + offsetY)\n            } else {\n                // Smooth fur\n                ctx.quadraticCurveTo(\n                    baseX + Math.cos(angle) * 4 + offsetX * 0.5,\n                    baseY + Math.sin(angle) * 4 + offsetY * 0.5,\n                    baseX + Math.cos(angle + flow) * 6 + offsetX,\n                    baseY + Math.sin(angle + flow) * 6 + offsetY\n                )\n            }\n            ctx.stroke()\n        }\n        \n        ctx.globalAlpha = 1\n    }\n    \n    drawSoundWaves(ctx, wolf) {\n        ctx.save()\n        ctx.globalAlpha = 0.3\n        ctx.strokeStyle = wolf.colors.eyes\n        ctx.lineWidth = 2\n        \n        // Draw expanding circular waves\n        for (let i = 0; i < 3; i++) {\n            const phase = wolf.soundWavePhase + i * Math.PI / 3\n            const radius = 10 + Math.sin(phase) * wolf.soundWaveAmplitude + i * 15\n            const alpha = 0.3 - i * 0.1\n            \n            ctx.globalAlpha = alpha\n            ctx.beginPath()\n            ctx.arc(30, 5, radius, -Math.PI / 3, Math.PI / 3)\n            ctx.stroke()\n        }\n        \n        ctx.restore()\n    }\n    \n    drawWolfUI(ctx, wolf) {\n        // Draw health bar for special wolves\n        if (wolf.isAlpha || wolf.health < wolf.maxHealth) {\n            ctx.save()\n            ctx.scale(1 / wolf.size, 1 / wolf.size)\n            \n            const barWidth = 60\n            const barHeight = 6\n            const barY = -wolf.height * 0.5 - 20\n            \n            // Background\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.5)'\n            ctx.fillRect(-barWidth / 2, barY, barWidth, barHeight)\n            \n            // Health\n            const healthPercent = wolf.health / wolf.maxHealth\n            ctx.fillStyle = healthPercent > 0.5 ? '#4caf50' : \n                           healthPercent > 0.25 ? '#ff9800' : '#f44336'\n            ctx.fillRect(-barWidth / 2, barY, barWidth * healthPercent, barHeight)\n            \n            // Border\n            ctx.strokeStyle = wolf.isAlpha ? '#ffd700' : '#ffffff'\n            ctx.lineWidth = 1\n            ctx.strokeRect(-barWidth / 2, barY, barWidth, barHeight)\n            \n            // Status icons\n            if (wolf.isAlpha) {\n                ctx.font = '12px Arial'\n                ctx.textAlign = 'center'\n                ctx.fillText('👑', 0, barY - 5)\n            }\n            \n            // State indicator\n            if (wolf.state === 'prowling') {\n                ctx.fillText('👁', -35, barY + 5)\n            } else if (wolf.state === 'howling') {\n                ctx.fillText('🔊', -35, barY + 5)\n            }\n            \n            ctx.restore()\n        }\n        \n        // Draw charge indicator for lunge\n        if (wolf.lungeState?.charging) {\n            ctx.save()\n            ctx.globalAlpha = 0.7\n            \n            const chargePercent = wolf.lungeState.chargeTime / wolf.lungeState.maxChargeTime\n            const indicatorRadius = 15\n            \n            // Charging circle\n            ctx.strokeStyle = `hsl(${chargePercent * 60}, 100%, 50%)`\n            ctx.lineWidth = 3\n            ctx.beginPath()\n            ctx.arc(0, -wolf.height * 0.7, indicatorRadius, \n                   -Math.PI / 2, -Math.PI / 2 + Math.PI * 2 * chargePercent)\n            ctx.stroke()\n            \n            // Pulse effect\n            if (chargePercent >= 1) {\n                ctx.globalAlpha = 0.3 + Math.sin(wolf.animationTime * 0.01) * 0.3\n                ctx.strokeStyle = '#ff0000'\n                ctx.beginPath()\n                ctx.arc(0, -wolf.height * 0.7, indicatorRadius + 5, 0, Math.PI * 2)\n                ctx.stroke()\n            }\n            \n            ctx.restore()\n        }\n    }\n}\n\n// Export the animation system\nexport default WolfAnimationSystem"],"names":[],"mappings":"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"}