class t{constructor(t,e,s,i,a=100){this.x=t,this.y=e,this.width=s,this.height=i,this.duration=a}}class e{constructor(t,e,s={}){this.name=t,this.frames=e,this.loop=null===s.loop||void 0===s.loop||s.loop,this.pingPong=s.pingPong||!1,this.speed=s.speed||1,this.onComplete=s.onComplete||null,this.onFrame=s.onFrame||null,this.currentFrame=0,this.elapsedTime=0,this.direction=1,this.isPlaying=!1,this.hasCompleted=!1}play(){this.isPlaying=!0,this.hasCompleted=!1,this.currentFrame=0,this.elapsedTime=0,this.direction=1}stop(){this.isPlaying=!1}pause(){this.isPlaying=!1}resume(){this.isPlaying=!0}reset(){this.currentFrame=0,this.elapsedTime=0,this.direction=1,this.hasCompleted=!1}update(t){if(!this.isPlaying||0===this.frames.length)return;this.elapsedTime+=t*this.speed*1e3;const e=this.frames[this.currentFrame];if(this.elapsedTime>=e.duration){this.elapsedTime-=e.duration;const t=this.currentFrame;this.currentFrame+=this.direction,this.pingPong?(this.currentFrame>=this.frames.length||this.currentFrame<0)&&(this.direction*=-1,this.currentFrame+=2*this.direction):this.currentFrame>=this.frames.length&&(this.loop?this.currentFrame=0:(this.currentFrame=this.frames.length-1,this.isPlaying=!1,this.hasCompleted=!0,this.onComplete&&this.onComplete())),this.onFrame&&this.currentFrame!==t&&this.onFrame(this.currentFrame,this.frames[this.currentFrame])}}getCurrentFrame(){return 0===this.frames.length?null:this.frames[this.currentFrame]}getProgress(){return 0===this.frames.length?0:this.currentFrame/(this.frames.length-1)}}class s{constructor(){this.animations=new Map,this.currentAnimation=null,this.transitions=new Map,this.blendTime=0,this.blendFrom=null,this.blendProgress=0}addAnimation(t){this.animations.set(t.name,t)}play(t,e={}){const s=this.animations.get(t);if(!s)return;const i=e.transition||0;i>0&&this.currentAnimation&&(this.blendFrom=this.currentAnimation,this.blendTime=i,this.blendProgress=0),this.currentAnimation=s,s.play()}stop(){this.currentAnimation&&this.currentAnimation.stop()}update(t){this.blendTime>0&&(this.blendProgress+=t,this.blendProgress>=this.blendTime&&(this.blendTime=0,this.blendFrom=null,this.blendProgress=0)),this.currentAnimation&&this.currentAnimation.update(t)}getCurrentFrame(){return this.currentAnimation?this.currentAnimation.getCurrentFrame():null}getBlendFrames(){if(0===this.blendTime||!this.blendFrom)return{current:this.getCurrentFrame(),blend:null,blendFactor:0};const t=this.blendProgress/this.blendTime;return{current:this.currentAnimation.getCurrentFrame(),blend:this.blendFrom.getCurrentFrame(),blendFactor:t}}isPlaying(t){return this.currentAnimation&&this.currentAnimation.name===t&&this.currentAnimation.isPlaying}setSpeed(t){this.currentAnimation&&(this.currentAnimation.speed=t)}}class i{constructor(){this.animations=new Map}createBreathingAnimation(t={}){const{baseScale:e=1,intensity:s=.015,speed:i=2,depthVariation:a=.3,asymmetry:n=.2,heartRateSync:r=!0}=t;return{time:0,phase:0,breathRate:i,currentIntensity:s,depthMod:1,asymmetryOffset:0,modulateForState(t){switch(t){case"running":this.depthMod=.3,this.breathRate=3*i;break;case"attacking":this.depthMod=.5,this.breathRate=1.8*i;break;case"blocking":this.depthMod=.2,this.breathRate=1.3*i;break;case"hurt":this.depthMod=.1,this.breathRate=.5*i;break;case"dead":this.depthMod=0,this.breathRate=0;break;default:this.depthMod=1,this.breathRate=i}},update(t){if(this.breathRate<=0)return{scaleX:e,scaleY:e,offsetY:0,chestExpansion:0};this.time+=t*this.breathRate,this.phase=Math.sin(this.time);const s=this.currentIntensity*this.depthMod,i=e+this.phase*s,a=e+this.phase*s*.7,r=i+Math.sin(.7*this.time)*n*s*.3,h=this.phase*s*2,o=1-Math.exp(5*-t);return this.currentIntensity=this.currentIntensity+(s-this.currentIntensity)*o,{scaleX:r,scaleY:a,offsetY:.5*-h,chestExpansion:h,phase:this.phase,intensity:s}}}}createBobbingAnimation(t=5,e=2){return{time:0,update(s){return this.time+=s*e,{offsetY:Math.sin(this.time)*t,rotation:.05*Math.sin(.5*this.time)}}}}createSquashStretch(t=.3,e=.2){return{time:0,active:!1,trigger(){this.time=0,this.active=!0},update(s){if(!this.active)return{scaleX:1,scaleY:1};this.time+=s;const i=Math.min(this.time/e,1);if(i>=1)return this.active=!1,{scaleX:1,scaleY:1};const a=2**(-10*i)*Math.sin(2*Math.PI*(i-.075)/.3)+1,n=1-a*t,r=1+a*t*.5;return{scaleX:i<.5?r:n,scaleY:i<.5?n:r}}}}createWobble(t=10,e=.8,s=.1){return{velocity:0,displacement:0,update(i,a=0){const n=-t*this.displacement,r=-e*this.velocity;return this.velocity+=(n+r+a)*i,this.displacement+=this.velocity*i,{scaleX:1+this.displacement*s,scaleY:1-this.displacement*s*.5,rotation:.1*this.displacement}},impulse(t){this.velocity+=t}}}createAnticipation(t=.3,e=.15){return{time:0,active:!1,phase:"idle",trigger(){this.time=0,this.active=!0,this.phase="anticipation"},update(s){if(!this.active)return{scaleX:1,scaleY:1,offsetX:0};if(this.time+=s,"anticipation"===this.phase){const s=Math.min(this.time/(.4*t),1),i=1-Math.cos(s*Math.PI*.5);return s>=1&&(this.phase="action",this.time=0),{scaleX:1-i*e,scaleY:1+i*e*.5,offsetX:10*-i}}if("action"===this.phase){const s=Math.min(this.time/(.2*t),1),i=Math.sin(s*Math.PI*.5);return s>=1&&(this.phase="recovery",this.time=0),{scaleX:1+i*e*2,scaleY:1-i*e,offsetX:20*i}}if("recovery"===this.phase){const s=Math.min(this.time/(.4*t),1),i=1-(1-s)**3;return s>=1&&(this.active=!1,this.phase="idle"),{scaleX:1+(1-i)*e*.5,scaleY:1-(1-i)*e*.25,offsetX:10*(1-i)}}return{scaleX:1,scaleY:1,offsetX:0}}}}createAdvancedIK(t={}){const{armLength:e=25,forearmLength:s=20,damping:i=.8,stiffness:a=.5,maxReach:n=40}=t;return{shoulder:{x:0,y:0},elbow:{x:0,y:0},hand:{x:0,y:0},target:{x:0,y:0},targetVelocity:{x:0,y:0},solveIK(t,i,a,r){this.target.x=t,this.target.y=i,this.shoulder.x=a,this.shoulder.y=r;const h=t-a,o=i-r,l=Math.sqrt(h*h+o*o),c=Math.min(l,n),m=c/l,u=a+h*m,g=r+o*m,d=e+s,p=Math.acos(Math.max(-1,Math.min(1,c/d))),y=Math.atan2(g-r,u-a);return this.elbow.x=a+Math.cos(y-.5*p)*e,this.elbow.y=r+Math.sin(y-.5*p)*e,this.hand.x=this.elbow.x+Math.cos(y+.5*p)*s,this.hand.y=this.elbow.y+Math.sin(y+.5*p)*s,{shoulder:{...this.shoulder},elbow:{...this.elbow},hand:{...this.hand},target:{x:u,y:g},reach:c/d}},update(t,e,s,n,r){const h=e+this.targetVelocity.x*t*.1,o=s+this.targetVelocity.y*t*.1;this.targetVelocity.x=(h-this.target.x)/t*i,this.targetVelocity.y=(o-this.target.y)/t*i;return{...this.solveIK(h,o,n,r),stiffness:1-Math.exp(-a*t)}}}}createSecondaryMotion(t={}){const{segments:e=5,length:s=15,damping:i=.85,stiffness:a=.3,gravity:n=.5,windStrength:r=.1}=t;return{segments:[],anchorPoint:{x:0,y:0},windTime:0,initialize(t,i){this.anchorPoint={x:t,y:i},this.segments=[];for(let a=0;a<e;a++)this.segments.push({x:t,y:i+a*(s/e),vx:0,vy:0,prevX:t,prevY:i+a*(s/e)})},update(t,a,h,o=0){this.anchorPoint.x=a,this.anchorPoint.y=h,this.windTime+=t,this.segments[0].x=a,this.segments[0].y=h;for(let a=1;a<this.segments.length;a++){const h=this.segments[a],l=this.segments[a-1],c=h.x-l.x,m=h.y-l.y,u=Math.sqrt(c*c+m*m);if(u>0){const t=s/e/u;h.x=l.x+c*t,h.y=l.y+m*t}h.vy+=n*t;const g=Math.sin(2*this.windTime+o)*r,d=Math.cos(1.5*this.windTime+o)*r*.5;h.vx+=g*t,h.vy+=d*t;const p=h.x,y=h.y;h.x+=(h.x-h.prevX)*i+h.vx*t,h.y+=(h.y-h.prevY)*i+h.vy*t,h.prevX=p,h.prevY=y,h.vx*=i,h.vy*=i}return[...this.segments]},applyForce(t,e,s=-1){-1===s?this.segments.forEach(s=>{s.vx+=t,s.vy+=e}):s<this.segments.length&&(this.segments[s].vx+=t,this.segments[s].vy+=e)}}}createMomentumSystem(t={}){const{maxMomentum:e=10,momentumDecay:s=.9,momentumInfluence:i=.3,directionSmoothing:a=.8}=t;return{momentum:{x:0,y:0},smoothedDirection:{x:0,y:0},lastVelocity:{x:0,y:0},update(t,n,r,h=!0){const o=n-this.lastVelocity.x,l=r-this.lastVelocity.y;this.lastVelocity={x:n,y:r};const c=Math.sqrt(o*o+l*l);if(c>.1){const t=Math.min(c*i,e),s=o/c,a=l/c;this.momentum.x+=s*t,this.momentum.y+=a*t}this.momentum.x*=s,this.momentum.y*=s;const m=Math.sqrt(this.momentum.x*this.momentum.x+this.momentum.y*this.momentum.y);m>e&&(this.momentum.x=this.momentum.x/m*e,this.momentum.y=this.momentum.y/m*e);const u=n,g=r,d=Math.sqrt(u*u+g*g);if(d>.1){const t={x:u/d,y:g/d};this.smoothedDirection.x=this.smoothedDirection.x*(1-a)+t.x*a,this.smoothedDirection.y=this.smoothedDirection.y*(1-a)+t.y*a}return{momentum:{...this.momentum},smoothedDirection:{...this.smoothedDirection},leanAngle:h?.3*Math.atan2(this.momentum.x,Math.abs(this.momentum.y)+1):0,bounceFactor:.1*m,stretchFactor:Math.max(0,.05*m)}},addImpulse(t,e){this.momentum.x+=t,this.momentum.y+=e}}}createTrailEffect(t=5,e=.3){return{trails:[],lastPosition:null,update(s,i){if(this.trails=this.trails.filter(t=>(t.alpha-=e*s,t.alpha>0)),this.lastPosition){const e=i.x-this.lastPosition.x,s=i.y-this.lastPosition.y;Math.sqrt(e*e+s*s)>10&&(this.trails.push({x:this.lastPosition.x,y:this.lastPosition.y,alpha:.5,scale:.8}),this.trails.length>t&&this.trails.shift(),this.lastPosition={...i})}else this.lastPosition={...i};return this.trails},clear(){this.trails=[]}}}}class a{constructor(){this.controller=new s,this.procedural=new i,this.breathing=this.procedural.createBreathingAnimation({intensity:.012,speed:1.8,asymmetry:.15}),this.squashStretch=this.procedural.createSquashStretch(),this.wobble=this.procedural.createWobble(),this.anticipation=this.procedural.createAnticipation(),this.trail=this.procedural.createTrailEffect(),this.advancedIK=this.procedural.createAdvancedIK({armLength:22,forearmLength:18,damping:.75,stiffness:.4}),this.secondaryMotion=this.procedural.createSecondaryMotion({segments:4,length:12,damping:.82,stiffness:.25,gravity:.3,windStrength:.08}),this.momentumSystem=this.procedural.createMomentumSystem({maxMomentum:8,momentumDecay:.88,momentumInfluence:.25,directionSmoothing:.75}),this.state="idle",this.facing="right",this.moving=!1,this.attacking=!1,this.blocking=!1,this.rolling=!1,this.hurt=!1,this.jumping=!1,this.doubleJumping=!1,this.wallSliding=!1,this.dashing=!1,this.charging=!1,this.dead=!1,this.landing=!1,this.blendFactors={idle:1,run:0,attack:0,block:0,roll:0,hurt:0,jump:0,doubleJump:0,land:0,wallSlide:0,dash:0,chargeAttack:0,death:0},this.targetBlendFactors={...this.blendFactors},this.blendSpeed=.2}getAnimStateName(t){switch(t){case 0:default:return"idle";case 1:return"running";case 2:return"attacking";case 3:return"blocking";case 4:return"rolling";case 5:return"hurt";case 6:return"dead";case 7:return"jumping";case 8:return"doubleJumping";case 9:return"landing";case 10:return"wallSliding";case 11:return"dashing";case 12:return"chargingAttack"}}setAnimState(t){if(this.state!==t)switch(this.state=t,Object.keys(this.targetBlendFactors).forEach(t=>{this.targetBlendFactors[t]=0}),this.targetBlendFactors[this.getAnimStateName(t)]=1,this.controller.play(this.getAnimStateName(t),{transition:100}),t){case 2:this.anticipation.trigger();break;case 5:this.squashStretch.trigger(),this.wobble.impulse(10);break;case 4:case 11:this.trail.clear();break;case 7:this.squashStretch.trigger();break;case 8:this.wobble.impulse(5),this.trail.clear();break;case 9:this.squashStretch.trigger(),this.wobble.impulse(15);break;case 12:this.anticipation.trigger(),this.wobble.impulse(3);break;case 6:this.squashStretch.trigger(),this.wobble.impulse(20)}}update(t,e,s={x:0,y:0},i=!0){this.controller.update(t),Object.keys(this.blendFactors).forEach(t=>{const e=this.targetBlendFactors[t]-this.blendFactors[t];this.blendFactors[t]+=e*this.blendSpeed}),this.breathing.modulateForState(this.state);const a=this.breathing.update(t),n=this.momentumSystem.update(t,s.x,s.y,i);0===this.secondaryMotion.segments.length&&this.secondaryMotion.initialize(e.x,e.y-8);const r=this.secondaryMotion.update(t,e.x,e.y-8),h=this.squashStretch.update(t),o=this.wobble.update(t),l=this.anticipation.update(t),c={scaleX:1,scaleY:1,rotation:0,offsetX:0,offsetY:0,trails:this.trail.update(t,e),secondaryMotion:r,momentum:n,ik:null};return(this.blendFactors.idle>0||this.blendFactors.run>0)&&(c.scaleX*=a.scaleX,c.scaleY*=a.scaleY,c.offsetY+=a.offsetY),c.rotation+=n.leanAngle,c.scaleY*=1+n.stretchFactor,c.offsetY+=n.bounceFactor*Math.sin(.01*Date.now()),c.scaleX*=h.scaleX,c.scaleY*=h.scaleY,c.scaleX*=o.scaleX,c.scaleY*=o.scaleY,c.rotation+=o.rotation,"attack"!==this.state&&"chargeAttack"!==this.state||(c.scaleX*=l.scaleX,c.scaleY*=l.scaleY,c.offsetX+=l.offsetX),"left"===this.facing&&(c.scaleX*=-1),c}setFacing(t){this.facing=t}triggerHurt(){this.setAnimState(5),setTimeout(()=>{5===this.state&&this.setAnimState(0)},300)}triggerAttack(){this.setAnimState(2),setTimeout(()=>{2===this.state&&this.setAnimState(0)},400)}triggerRoll(){this.setAnimState(4),setTimeout(()=>{4===this.state&&this.setAnimState(0)},300)}triggerBlock(){this.setAnimState(3)}releaseBlock(){3===this.state&&this.setAnimState(0)}setMoving(t){this.moving=t,t&&0===this.state?this.setAnimState(1):t||1!==this.state||this.setAnimState(0)}}const n={createPlayerAnimations:()=>({idle:new e("idle",[new t(0,0,32,32,200),new t(32,0,32,32,200),new t(64,0,32,32,200),new t(96,0,32,32,200)]),run:new e("run",[new t(0,32,32,32,100),new t(32,32,32,32,100),new t(64,32,32,32,100),new t(96,32,32,32,100),new t(128,32,32,32,100),new t(160,32,32,32,100)]),attack:new e("attack",[new t(0,64,32,32,50),new t(32,64,32,32,50),new t(64,64,32,32,100),new t(96,64,32,32,50)],{loop:!1}),block:new e("block",[new t(0,96,32,32,100)],{loop:!1}),roll:new e("roll",[new t(0,128,32,32,50),new t(32,128,32,32,50),new t(64,128,32,32,50),new t(96,128,32,32,50)],{loop:!1}),hurt:new e("hurt",[new t(0,160,32,32,100),new t(32,160,32,32,100)],{loop:!1}),death:new e("death",[new t(0,192,32,32,100),new t(32,192,32,32,100),new t(64,192,32,32,100),new t(96,192,32,32,200),new t(128,192,32,32,-1)],{loop:!1}),jump:new e("jump",[new t(0,224,32,32,100),new t(32,224,32,32,100),new t(64,224,32,32,-1)],{loop:!1}),doubleJump:new e("doubleJump",[new t(0,256,32,32,50),new t(32,256,32,32,50),new t(64,256,32,32,50),new t(96,256,32,32,50),new t(128,256,32,32,50),new t(160,256,32,32,50),new t(192,256,32,32,50),new t(224,256,32,32,-1)],{loop:!1}),land:new e("land",[new t(0,288,32,32,50),new t(32,288,32,32,50),new t(64,288,32,32,100)],{loop:!1}),wallSlide:new e("wallSlide",[new t(0,320,32,32,100),new t(32,320,32,32,100)],{loop:!0}),dash:new e("dash",[new t(0,352,32,32,50),new t(32,352,32,32,50),new t(64,352,32,32,100),new t(96,352,32,32,50)],{loop:!1}),chargeAttack:new e("chargeAttack",[new t(0,384,32,32,100),new t(32,384,32,32,100),new t(64,384,32,32,100),new t(96,384,32,32,50),new t(128,384,32,32,50),new t(160,384,32,32,100)],{loop:!1})}),createWolfAnimations:()=>({idle:new e("idle",[new t(0,0,48,32,300),new t(48,0,48,32,300)]),prowl:new e("prowl",[new t(0,32,48,32,150),new t(48,32,48,32,150),new t(96,32,48,32,150),new t(144,32,48,32,150)]),lunge:new e("lunge",[new t(0,64,48,32,50),new t(48,64,48,32,100),new t(96,64,48,32,50)],{loop:!1}),hurt:new e("hurt",[new t(0,96,48,32,100)],{loop:!1}),howl:new e("howl",[new t(0,128,48,32,200),new t(48,128,48,32,300),new t(96,128,48,32,400),new t(144,128,48,32,300),new t(192,128,48,32,200)],{loop:!1}),death:new e("death",[new t(0,160,48,32,100),new t(48,160,48,32,100),new t(96,160,48,32,100),new t(144,160,48,32,200),new t(192,160,48,32,-1)],{loop:!1}),packRun:new e("packRun",[new t(0,192,48,32,80),new t(48,192,48,32,80),new t(96,192,48,32,80),new t(144,192,48,32,80),new t(192,192,48,32,80),new t(240,192,48,32,80)],{loop:!0})}),createEffectAnimations:()=>({explosion:new e("explosion",[new t(0,0,64,64,50),new t(64,0,64,64,50),new t(128,0,64,64,50),new t(192,0,64,64,50),new t(256,0,64,64,50)],{loop:!1}),spark:new e("spark",[new t(0,64,32,32,30),new t(32,64,32,32,30),new t(64,64,32,32,30)],{loop:!1}),projectileSpawn:new e("projectileSpawn",[new t(0,128,16,16,30),new t(16,128,16,16,30),new t(32,128,16,16,30)],{loop:!1}),projectileImpact:new e("projectileImpact",[new t(0,144,32,32,40),new t(32,144,32,32,40),new t(64,144,32,32,40),new t(96,144,32,32,40)],{loop:!1}),itemPickup:new e("itemPickup",[new t(0,176,32,32,50),new t(32,176,32,32,50),new t(64,176,32,32,50),new t(96,176,32,32,50),new t(128,176,32,32,50)],{loop:!1}),powerUp:new e("powerUp",[new t(0,208,64,64,60),new t(64,208,64,64,60),new t(128,208,64,64,60),new t(192,208,64,64,60),new t(256,208,64,64,60),new t(320,208,64,64,60)],{loop:!1})})};class r{constructor(t=400,e=300,s={}){this.x=t,this.y=e,this.facing=1,this.health=s.health||100,this.maxHealth=s.maxHealth||100,this.stamina=s.stamina||100,this.maxStamina=s.maxStamina||100,this.speed=s.speed||250,this.rollSpeed=s.rollSpeed||500,this.state="idle",this.previousState="idle",this.stateTimer=0,this.stateTime=0,this.stateDuration=0,this._prevNormTime=0,this._comboQueued=!1,this._currentAttackType="light",this.invulnerable=!1,this.invulnerabilityTimer=0,this.isGrounded=!0,this.jumpCount=0,this.nearWall=!1,this.dashCooldown=0,this.chargeTime=0,this.maxChargeTime=1.5,this.params={roll:{duration:.5,iFrameStart:.08,iFrameEnd:.36,staminaCost:25,cooldown:.6},attackLight:{duration:.42,activeStart:.28,activeEnd:.38,staminaCost:12,cooldown:.5},attackHeavy:{duration:.62,activeStart:.32,activeEnd:.48,staminaCost:24,cooldown:.8},comboWindow:{start:.55,end:.75},parry:{duration:.22,window:.18,staminaCost:10}},this.animator=new a,this.animations=n.createPlayerAnimations(),this.setupAnimations(),this.attackCooldown=0,this.rollCooldown=0,this.blockHeld=!1,this.width=s.width||32,this.height=s.height||32,this.color=s.color||"#00ff88",this.sprite=s.sprite||null,this.sprite||this.loadSpriteSheet(),this.particleSystem=s.particleSystem||null,this.soundSystem=s.soundSystem||null,this.attackDamage=s.attackDamage||20,this.attackDamageHeavy=s.attackDamageHeavy||35,this.attackRange=s.attackRange||60,this.attackRangeHeavy=s.attackRangeHeavy||80,this.blockDamageReduction=s.blockDamageReduction||.5,this.stridePhase=0,this.gaitRate=1.4,this._lastFootFlag=0,this.footstepIntervalBase=.28,this.ik={pelvisY:0,pelvisRate:10,left:{locked:!1,y:0},right:{locked:!1,y:0},stepHeight:2},this.debugMode=!1}loadSpriteSheet(){this.sprite=new Image,this.sprite.src="./src/images/player-sprites.png",this.sprite.onload=()=>{},this.sprite.onerror=()=>{console.warn("Player sprite sheet not found at ./src/images/player-sprites.png, using fallback rendering"),this.sprite=null}}setupAnimations(){Object.values(this.animations).forEach(t=>{this.animator.controller.addAnimation(t)}),this.animator.controller.play("idle")}update(t,e={}){this._prevNormTime=this.getNormalizedTime(),this.attackCooldown=Math.max(0,this.attackCooldown-t),this.rollCooldown=Math.max(0,this.rollCooldown-t),this.invulnerable&&(this.invulnerabilityTimer-=t,this.invulnerabilityTimer<=0&&(this.invulnerable=!1)),this.updateIK(t);let s=0,i=0;e.left&&(s-=1),e.right&&(s+=1),e.up&&(i-=1),e.down&&(i+=1),globalThis.wasmExports?.set_player_input?.(s,i,e.roll?1:0,e.jump?1:0,e.attack?1:0,e.block?1:0),this.x=globalThis.wasmExports?.get_x?.(),this.y=globalThis.wasmExports?.get_y?.(),this.isGrounded=1===globalThis.wasmExports?.get_is_grounded?.(),this.jumpCount=globalThis.wasmExports?.get_jump_count?.();const a=globalThis.wasmExports?.get_vel_x?.(),n=globalThis.wasmExports?.get_vel_y?.();if("number"==typeof a&&"number"==typeof n){Math.hypot(a,n)>.001&&(this.facing=a>=0?1:-1)}this.animator&&"function"==typeof this.animator.setFacing&&this.animator.setFacing(this.facing>=0?"right":"left");const r=globalThis.wasmExports?.get_anim_offset_x?.()??0,h=globalThis.wasmExports?.get_anim_offset_y?.()??0,o=globalThis.wasmExports?.get_anim_scale_x?.()??1,l=globalThis.wasmExports?.get_anim_scale_y?.()??1,c=globalThis.wasmExports?.get_anim_rotation?.()??0;globalThis.wasmExports?.get_anim_pelvis_y?.();const m=globalThis.wasmExports?.get_player_anim_state?.();"number"==typeof m&&this.setState(this.getAnimStateName(m),!0);const u=this.animator.update(t,{x:this.x,y:this.y},{x:globalThis.wasmExports?.get_vel_x?.()??0,y:globalThis.wasmExports?.get_vel_y?.()??0},this.isGrounded)||{scaleX:1,scaleY:1,rotation:0,offsetX:0,offsetY:0},g=globalThis.wasmExports&&"number"==typeof r?{scaleX:o,scaleY:l,rotation:c,offsetX:r,offsetY:h}:this.computePoseOverlay(e);this.currentTransform={scaleX:u.scaleX*g.scaleX,scaleY:u.scaleY*g.scaleY,rotation:u.rotation+g.rotation,offsetX:u.offsetX+g.offsetX,offsetY:u.offsetY+g.offsetY,trails:u.trails||[]}}getNormalizedTime(){try{const t=t=>"function"==typeof globalThis.wasmExports?.[t]?globalThis.wasmExports[t]():void 0,e=t("get_attack_state"),s=t("get_attack_state_time"),i=t("get_time_seconds");if("number"==typeof e&&"number"==typeof s&&"number"==typeof i){const a=Math.max(0,i-s);let n=0;if(1===e?n=t("get_attack_windup_sec")??this.params.attackLight.duration:2===e?n=t("get_attack_active_sec")??this.params.attackLight.duration:3===e&&(n=t("get_attack_recovery_sec")??this.params.attackLight.duration),n&&n>0)return Math.max(0,Math.min(1,a/n))}if(1===t("get_is_rolling")){const e=t("get_roll_duration")||this.params.roll.duration,s=t("get_player_state_timer");if("number"==typeof s&&e>0)return Math.max(0,Math.min(1,s/e))}const a=t("get_player_state_timer");if("number"==typeof a){let t=0;switch(this.state){case"rolling":t=this.params.roll.duration;break;case"attacking":t="heavy"===this._currentAttackType?this.params.attackHeavy.duration:this.params.attackLight.duration;break;default:t=0}if(t>0)return Math.max(0,Math.min(1,a/t))}}catch{}try{const t=this.animator?.controller?.currentAnimation;if(t&&Array.isArray(t.frames)&&t.frames.length>1){const e=t.currentFrame/(t.frames.length-1);return Math.max(0,Math.min(1,e))}}catch{}return 0}startRoll(t){if(!globalThis.wasmExports?.on_roll_start?.())return;let e=0,s=0;t.left&&(e-=1),t.right&&(e+=1),t.up&&(s-=1),t.down&&(s+=1),0===e&&0===s&&(e=this.facing);const i=Math.hypot(e,s);i>0&&(e/=i,s/=i),this.rollDirection={x:e,y:s},this.particleSystem&&this.particleSystem.createDustCloud(this.x,this.y),this.soundSystem&&this.soundSystem.play("roll")}startAttack(t="light"){"heavy"===t?this.params.attackHeavy:this.params.attackLight,this._currentAttackType=t,globalThis.wasmExports?.on_attack?.("heavy"===t?1:0)&&this.soundSystem&&this.soundSystem.play("attack")}queueAttack(t="light"){this.canAttack()?this.startAttack(t):"attacking"===this.state&&(this._comboQueued=!0)}tryRoll(t=null){const e={};t&&(t.x||t.y)&&(e.left=t.x<-.5,e.right=t.x>.5,e.up=t.y<-.5,e.down=t.y>.5),this.startRoll(e)}tryParry(){"dead"!==this.state&&globalThis.wasmExports?.on_parry?.()&&this.soundSystem&&this.soundSystem.play("parry")}executeAttack(){const t="heavy"===this._currentAttackType,e=t?this.attackRangeHeavy:this.attackRange,s=t?this.attackDamageHeavy:this.attackDamage,i=this.x+this.facing*e/2,a=this.y;return this.particleSystem&&(t?this.particleSystem.createChargedSlash?.(i,a,this.facing,1):this.particleSystem.createSlashEffect(i,a,this.facing)),{x:i,y:a,width:e,height:this.height,damage:s}}startBlock(){globalThis.wasmExports?.set_blocking?.(1,this.facing,0)&&(this.blockHeld=!0,this.particleSystem&&this.particleSystem.createShieldEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("block"))}stopBlock(){globalThis.wasmExports?.set_blocking?.(0,this.facing,0),this.blockHeld=!1}takeDamage(t,e=0,s=0){return!this.invulnerable&&"dead"!==this.state&&("blocking"===this.state?(this.particleSystem&&this.particleSystem.createBlockImpact(this.x,this.y),this.soundSystem&&this.soundSystem.play("blockImpact")):(this.particleSystem&&this.particleSystem.createBloodEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("hurt")),!0)}die(){this.particleSystem&&this.particleSystem.createDeathEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("death")}respawn(t,e){this.particleSystem&&this.particleSystem.createRespawnEffect(this.x,this.y),this.soundSystem&&this.soundSystem.play("respawn")}setState(t,e=!1){if(this.state===t)return;this.previousState=this.state,this.state=t,this.stateTime=0,this.stateDuration=0,this._prevNormTime=0;const s=this.stateNameToNumber(t);this.animator.setAnimState(s)}canAttack(){const t=Math.min(this.params.attackLight.staminaCost,this.params.attackHeavy.staminaCost);return this.attackCooldown<=0&&this.stamina>=t&&"dead"!==this.state&&"rolling"!==this.state&&"hurt"!==this.state}canRoll(){return this.rollCooldown<=0&&this.stamina>=this.params.roll.staminaCost&&"dead"!==this.state&&"attacking"!==this.state&&"hurt"!==this.state}canBlock(){return this.stamina>0&&"dead"!==this.state&&"rolling"!==this.state&&"attacking"!==this.state&&"hurt"!==this.state}render(t,e=null){let s=0,i=0;const a=e?.x||0,n=e?.y||0;if(globalThis.gameRenderer&&"function"==typeof globalThis.gameRenderer.wasmToWorld){const t=globalThis.gameRenderer.wasmToWorld(this.x||0,this.y||0);s=t.x-a,i=t.y-n}else{const t=800,e=600;s=(this.x||0)*t-a,i=(this.y||0)*e-n}t.save(),1===globalThis.wasmExports?.get_is_invulnerable?.()&&(t.globalAlpha=.5+.3*Math.sin(.02*Date.now()));const r=this.animator.controller.getCurrentFrame();if(this.sprite&&r){t.save();const e=this.currentTransform||{scaleX:1,scaleY:1,rotation:0,offsetX:0,offsetY:0},a=s+e.offsetX,n=i+e.offsetY;t.translate(a,n),t.rotate(e.rotation),t.scale(this.facing<0?-e.scaleX:e.scaleX,e.scaleY),t.drawImage(this.sprite,r.x,r.y,r.width,r.height,-this.width/2,-this.height/2,this.width,this.height),t.restore()}else t.fillStyle=this.color,"hurt"===this.state?t.fillStyle="#ff4444":"blocking"===this.state?t.fillStyle="#4444ff":"rolling"===this.state&&(t.fillStyle="#ffff44"),t.fillRect(s-this.width/2,i-this.height/2,this.width,this.height);const h=40,o=i-this.height/2-10;t.fillStyle="rgba(0, 0, 0, 0.5)",t.fillRect(s-20,o,h,4);const l=(globalThis.wasmExports?.get_hp?.()??this.health)/this.maxHealth;t.fillStyle=l>.5?"#00ff00":l>.25?"#ffff00":"#ff0000",t.fillRect(s-20,o,h*l,4);const c=o+5;t.fillStyle="rgba(0, 0, 0, 0.5)",t.fillRect(s-20,c,h,2);const m=(globalThis.wasmExports?.get_stamina?.()??this.stamina)/this.maxStamina;t.fillStyle="#00aaff",t.fillRect(s-20,c,h*m,2),this.debugMode&&this.renderDebug(t,e,s,i),t.restore()}computePoseOverlay(t){const e=this.getNormalizedTime();let s=1,i=1,a=0,n=this.ik?.pelvisY||0;const r=globalThis.wasmExports?.get_vel_x?.()??this.vx;globalThis.wasmExports?.get_vel_y?.()??this.vy;const h=globalThis.wasmExports?.get_speed?.()??this.speed;if("running"===this.state){a+=Math.max(-.15,Math.min(.15,r/(h||1)*.25))}if("blocking"===this.state&&(i*=.98,n+=1),"rolling"===this.state){const t=e<.5?2*e:2*(1-e);i*=1-.06*t,s*=1+.04*t,a+=.12*(this.facing>=0?1:-1)*t}return this.state,{scaleX:s,scaleY:i,rotation:a,offsetX:0,offsetY:n}}updateIK(t){const e=globalThis.wasmExports?.get_anim_pelvis_y?.();this.ik.pelvisY="number"==typeof e?e:0;const s=globalThis.wasmExports?.get_vel_x?.()??0,i=globalThis.wasmExports?.get_vel_y?.()??0;if(Math.hypot(s,i)>10){this.stridePhase=(this.stridePhase+t*this.gaitRate)%1;const e=this.stridePhase<.25||this.stridePhase>.75;this.ik.left.locked=e,this.ik.right.locked=!e}else this.ik.left.locked=!1,this.ik.right.locked=!1,this.stridePhase=0}renderDebug(t,e,s,i){const a=s,n=i-this.height/2-18;t.save(),t.fillStyle="rgba(0,0,0,0.35)",t.fillRect(a-24,n,48,4),t.fillStyle="#00ffaa",t.fillRect(a-24,n,this.stridePhase%1*48,4),t.strokeStyle="#ffaa00",t.beginPath(),t.moveTo(a+30,n+2),t.lineTo(a+30,n+2-(this.ik?.pelvisY||0)),t.stroke();const r=globalThis.wasmExports?.get_attack_state?.()??0,h=globalThis.wasmExports?.get_attack_state_time?.()??0,o=globalThis.wasmExports?.get_time_seconds?.()??0;let l=0;1===r?l=(o-h)/(globalThis.wasmExports?.get_attack_windup_sec?.()??this.params.attackLight.duration):2===r?l=(o-h)/(globalThis.wasmExports?.get_attack_active_sec?.()??this.params.attackLight.duration):3===r&&(l=(o-h)/(globalThis.wasmExports?.get_attack_recovery_sec?.()??this.params.attackLight.duration));const c=n+8;t.fillStyle="rgba(0,0,0,0.35)",t.fillRect(a-24,c,48,3),2===r&&(t.fillStyle="#ff4477",t.fillRect(a-24+48*.28,c,48*(.38-.28),3)),1===globalThis.wasmExports?.get_is_rolling?.()&&(t.fillStyle="#ffee55",t.fillRect(a-24+3.84,c,48*(.36-.08),3)),t.fillStyle="#ffffff",t.fillRect(a-24+48*l-1,c-1,2,5),t.restore()}getAnimStateName(t){switch(t){case 0:default:return"idle";case 1:return"running";case 2:return"attacking";case 3:return"blocking";case 4:return"rolling";case 5:return"hurt";case 6:return"dead";case 7:return"jumping";case 8:return"doubleJumping";case 9:return"landing";case 10:return"wallSliding";case 11:return"dashing";case 12:return"chargingAttack"}}stateNameToNumber(t){switch(t){case"idle":default:return 0;case"running":return 1;case"attacking":return 2;case"blocking":return 3;case"rolling":return 4;case"hurt":return 5;case"dead":return 6;case"jumping":return 7;case"doubleJumping":return 8;case"landing":return 9;case"wallSliding":return 10;case"dashing":return 11;case"chargingAttack":return 12}}getAnimationInfo(){return{state:this.state,animation:this.animator.controller.currentAnimation?.name,frame:this.animator.controller.getCurrentFrame(),stateTimer:globalThis.wasmExports?.get_player_state_timer?.()??0,invulnerable:1===globalThis.wasmExports?.get_is_invulnerable?.()}}static createInputFromKeys(t){return{left:t.a||t.arrowleft,right:t.d||t.arrowright,up:t.w||t.arrowup,down:t.s||t.arrowdown,attack:t[" "]||t.j,heavy:t.h,parry:t.p,block:t.shift||t.k,roll:t.control||t.l,jump:t.space||t.z,dash:t.x||t.shift,chargeAttack:t.c||t.h}}jump(){globalThis.wasmExports?.on_jump?.(),this.particleSystem&&this.particleSystem.createDustCloud(this.x,this.y+this.height/2),this.soundSystem&&this.soundSystem.play("jump")}}r.attachDebugToggle=(t,e="F3")=>{if(!t||t.__debugToggleAttached)return;const s=(e||"F3").toLowerCase(),i=e=>{(e.key||"").toLowerCase()===s.toLowerCase()&&(t.debugMode=!t.debugMode)};try{addEventListener("keydown",i),t.__debugToggleAttached=!0}catch{}};export{r as AnimatedPlayer,r as default};