const e=new TextDecoder,t=new TextEncoder,r=async(e,t)=>{if(n=e,"undefined"!=typeof Response&&n instanceof Response)try{const r="function"==typeof e.clone?e.clone():e;return await WebAssembly.instantiateStreaming(r,t)}catch(r){console.debug("WebAssembly streaming failed, falling back to array buffer:",r.message);const n="function"==typeof e.clone?e.clone():e,o=await n.arrayBuffer();return await WebAssembly.instantiate(o,t)}var n;if((e=>"string"==typeof e&&/\.wasm($|\?|#)/.test(e))(e)){const n=await fetch(e);return await r(n,t)}if((e=>e instanceof ArrayBuffer||e instanceof Uint8Array)(e)){const r=e instanceof Uint8Array?e:new Uint8Array(e);return await WebAssembly.instantiate(r,t)}throw new TypeError("Unsupported WASM source; expected URL/Response/bytes")},n=t=>{const r=()=>new Uint8Array(t.buffer),n=()=>new DataView(t.buffer);let o=(()=>{try{const e="undefined"!=typeof globalThis&&void 0!==globalThis.runSeedForVisuals?globalThis.runSeedForVisuals:-1627945385;return("bigint"==typeof e?Number(0xffffffffn&e):e>>>0)>>>0||2654435769}catch{return 2654435769}})();const a=()=>(o=Math.imul(o,1664525)+1013904223>>>0,255&o),s=Object.create(null);Object.defineProperty(s,"fd_write",{value(t,o,a,s){let i=0;const f=n(),l=r();let u=o>>>0;for(let r=0;r<a>>>0;r++){const r=f.getUint32(u,!0),n=f.getUint32(u+4,!0);u+=8;const o=l.subarray(r,r+n),a=e.decode(o);1===t||2===t&&console.error(a),i+=n}return f.setUint32(s>>>0,i>>>0,!0),0},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"proc_exit",{value(e){throw Error("WASI proc_exit: "+e)},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"random_get",{value(e,t){const n=r().subarray(e>>>0,(e>>>0)+(t>>>0)),o=(()=>{try{const e="undefined"!=typeof globalThis?globalThis:null;return e&&e.crypto&&"function"==typeof e.crypto.getRandomValues?e.crypto:null}catch(e){return null}})();if(o)o.getRandomValues(n);else for(let e=0;e<n.length;e++)n[e]=a();return 0},writable:!1,enumerable:!1,configurable:!1});let i=0n;return Object.defineProperty(s,"clock_time_get",{value(e,t,r){i+=16666666n;const o=i,a=n();if("function"==typeof a.setBigUint64)a.setBigUint64(r>>>0,o,!0);else{const e=Number(0xffffffffn&o),t=Number(o>>32n&0xffffffffn);a.setUint32(r>>>0,e,!0),a.setUint32((r>>>0)+4,t,!0)}return 0},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"args_sizes_get",{value(e,t){const r=n();return r.setUint32(e>>>0,0,!0),r.setUint32(t>>>0,0,!0),0},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"args_get",{value(){return 0},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"environ_sizes_get",{value(e,t){const r=n();return r.setUint32(e>>>0,0,!0),r.setUint32(t>>>0,0,!0),0},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"environ_get",{value(){return 0},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"fd_close",{value(){return 0},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(s,"fd_seek",{value(e,t,r,o,a){const s=n();return s.setUint32(a>>>0,0,!0),s.setUint32((a>>>0)+4,0,!0),0},writable:!1,enumerable:!1,configurable:!1}),Object.freeze(s)},o=(e,t)=>e&&"object"==typeof e?e:n(t),a=async(e,t={})=>{const n=t?.env?.memory||new WebAssembly.Memory({initial:16}),a=(e=>({env:{memory:e,abort(){throw Error("wasm abort")},abort_(){throw Error("wasm abort_")},__console_log(t,r){new Uint8Array(e.buffer,t,r)}}}))(n),s=t&&"object"==typeof t?t:{},i={...a,...s,env:{...a.env,...s.env||{}},wasi_snapshot_preview1:o(s.wasi_snapshot_preview1,n),wasi_unstable:o(s.wasi_unstable,n)},{instance:f,module:l}=await r(e,i);return{instance:f,module:l,memory:n,exports:f.exports}},s=({memory:r,exports:n})=>{const o=n.malloc;return"function"!=typeof o?{toWasm(){throw Error("malloc export not found")},fromWasm(){throw Error("memory export not found")}}:{toWasm(e){const n=t.encode(e),a=o(n.byteLength);return new Uint8Array(r.buffer,a,n.byteLength).set(n),{ptr:a,len:n.byteLength}},fromWasm(t,n){return e.decode(new Uint8Array(r.buffer,t,n))}}},i=async({source:e,imports:t,onReady:r})=>{const n=await a(e,t),o={start:n.exports.start||(()=>{}),update:n.exports.update||(()=>{}),handleMessage:n.exports.handleMessage||(()=>{}),exports:n.exports,memory:n.memory};return r?.(o),n.exports};export{s as createStringCodec,i as initWasmGame,a as loadWasm};